{"ast":null,"code":"import { FETCH_PRODUCT_REQUEST, FETCH_PRODUCT_SUCCESS, FETCH_PRODUCT_FAILURE, ADD_PRODUCT_AMOUNT, SUB_PRODUCT_AMOUNT, CHANGE_PRODUCT_AMOUNT, POST_ORDER_INFO_SUCCESS } from './OrderType';\nimport axios from 'axios'; //just a func to fetch the product info\n\nexport const fetchProduct = (page, size) => {\n  let urlPage = page - 1;\n  return dispatch => {\n    // dispatch(fetchProductRequest);\n    axios.get(\"http://localhost:8082/rest/products\" + \"?page=\" + urlPage + \"&size=\" + size).then(response => {\n      dispatch(fetchProductSuccess(response.data, page));\n    }).catch(error => {\n      dispatch(fetchProductFailure(error.message));\n    });\n  };\n}; //actions:\n\nexport const addProductAmount = id => {\n  return {\n    type: ADD_PRODUCT_AMOUNT,\n    id\n  };\n};\nexport const subProductAmount = id => {\n  return {\n    type: SUB_PRODUCT_AMOUNT,\n    id\n  };\n};\nexport const submitOrder = order => {\n  return {\n    type: POST_ORDER_INFO_SUCCESS,\n    order\n  };\n};\nexport const changeProductAmount = (id, amount) => {\n  return {\n    type: CHANGE_PRODUCT_AMOUNT,\n    id,\n    amount\n  };\n};\n\nconst fetchProductRequest = () => {\n  return {\n    type: FETCH_PRODUCT_REQUEST\n  };\n};\n\nconst fetchProductSuccess = (data, page) => {\n  return {\n    type: FETCH_PRODUCT_SUCCESS,\n    payload: data,\n    page: page\n  };\n};\n\nconst fetchProductFailure = errors => {\n  return {\n    type: FETCH_PRODUCT_FAILURE,\n    payload: errors\n  };\n};","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/services/order/OrderActions.js"],"names":["FETCH_PRODUCT_REQUEST","FETCH_PRODUCT_SUCCESS","FETCH_PRODUCT_FAILURE","ADD_PRODUCT_AMOUNT","SUB_PRODUCT_AMOUNT","CHANGE_PRODUCT_AMOUNT","POST_ORDER_INFO_SUCCESS","axios","fetchProduct","page","size","urlPage","dispatch","get","then","response","fetchProductSuccess","data","catch","error","fetchProductFailure","message","addProductAmount","id","type","subProductAmount","submitOrder","order","changeProductAmount","amount","fetchProductRequest","payload","errors"],"mappings":"AAAA,SAASA,qBAAT,EAA+BC,qBAA/B,EAAqDC,qBAArD,EACIC,kBADJ,EACuBC,kBADvB,EAC0CC,qBAD1C,EAEIC,uBAFJ,QAEkC,aAFlC;AAGA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAc;AACtC,MAAIC,OAAO,GAAGF,IAAI,GAAC,CAAnB;AACA,SAAOG,QAAQ,IAAI;AACf;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAU,wCAAsC,QAAtC,GAA+CF,OAA/C,GAAuD,QAAvD,GAAgED,IAA1E,EACCI,IADD,CACMC,QAAQ,IAAG;AACbH,MAAAA,QAAQ,CAACI,mBAAmB,CAACD,QAAQ,CAACE,IAAV,EAAeR,IAAf,CAApB,CAAR;AACH,KAHD,EAICS,KAJD,CAIOC,KAAK,IAAG;AACXP,MAAAA,QAAQ,CAACQ,mBAAmB,CAACD,KAAK,CAACE,OAAP,CAApB,CAAR;AACH,KAND;AAOH,GATD;AAUH,CAZM,C,CAcP;;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,EAAD,IAAO;AACpC,SAAM;AACFC,IAAAA,IAAI,EAAErB,kBADJ;AAEFoB,IAAAA;AAFE,GAAN;AAIF,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAIF,EAAD,IAAO;AACnC,SAAM;AACFC,IAAAA,IAAI,EAAEpB,kBADJ;AAEFmB,IAAAA;AAFE,GAAN;AAIF,CALK;AAON,OAAO,MAAMG,WAAW,GAAIC,KAAD,IAAU;AACjC,SAAM;AACFH,IAAAA,IAAI,EAAElB,uBADJ;AAEFqB,IAAAA;AAFE,GAAN;AAIH,CALM;AAOP,OAAO,MAAMC,mBAAmB,GAAG,CAACL,EAAD,EAAIM,MAAJ,KAAc;AAC9C,SAAM;AACFL,IAAAA,IAAI,EAAEnB,qBADJ;AAEFkB,IAAAA,EAFE;AAGFM,IAAAA;AAHE,GAAN;AAKF,CANM;;AAQR,MAAMC,mBAAmB,GAAG,MAAK;AAC7B,SAAO;AACHN,IAAAA,IAAI,EAAExB;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMgB,mBAAmB,GAAG,CAACC,IAAD,EAAMR,IAAN,KAAc;AACtC,SAAO;AACHe,IAAAA,IAAI,EAAEvB,qBADH;AAEH8B,IAAAA,OAAO,EAAEd,IAFN;AAGHR,IAAAA,IAAI,EAAEA;AAHH,GAAP;AAKH,CAND;;AAQA,MAAMW,mBAAmB,GAAGY,MAAM,IAAG;AACjC,SAAO;AACHR,IAAAA,IAAI,EAAEtB,qBADH;AAEH6B,IAAAA,OAAO,EAAEC;AAFN,GAAP;AAIH,CALD","sourcesContent":["import  {FETCH_PRODUCT_REQUEST,FETCH_PRODUCT_SUCCESS,FETCH_PRODUCT_FAILURE,\n    ADD_PRODUCT_AMOUNT,SUB_PRODUCT_AMOUNT,CHANGE_PRODUCT_AMOUNT,\n    POST_ORDER_INFO_SUCCESS} from './OrderType';\nimport axios from 'axios';\n\n\n//just a func to fetch the product info\nexport const fetchProduct = (page,size) =>{\n    let urlPage = page-1;\n    return dispatch => {\n        // dispatch(fetchProductRequest);\n        axios.get(\"http://localhost:8082/rest/products\"+\"?page=\"+urlPage+\"&size=\"+size)\n        .then(response =>{\n            dispatch(fetchProductSuccess(response.data,page));\n        })\n        .catch(error =>{\n            dispatch(fetchProductFailure(error.message));\n        });\n    }\n}\n\n//actions:\n\nexport const addProductAmount = (id) =>{\n   return{\n       type: ADD_PRODUCT_AMOUNT,\n       id\n   }\n}\n\nexport const subProductAmount = (id) =>{\n    return{\n        type: SUB_PRODUCT_AMOUNT,\n        id\n    }\n }\n\n export const submitOrder = (order) =>{\n     return{\n         type: POST_ORDER_INFO_SUCCESS,\n         order\n     }\n }\n\n export const changeProductAmount = (id,amount) =>{\n    return{\n        type: CHANGE_PRODUCT_AMOUNT,\n        id,\n        amount\n    }\n }\n\nconst fetchProductRequest = () =>{\n    return {\n        type: FETCH_PRODUCT_REQUEST\n    };\n};\n\nconst fetchProductSuccess = (data,page) =>{\n    return {\n        type: FETCH_PRODUCT_SUCCESS,\n        payload: data,\n        page: page\n    };\n};\n\nconst fetchProductFailure = errors =>{\n    return {\n        type: FETCH_PRODUCT_FAILURE,\n        payload: errors\n    };\n};"]},"metadata":{},"sourceType":"module"}