{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/AddNewBrand.js\";\nimport React, { Component } from 'react';\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nexport default class AddNewBrand extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      brandCategory: '',\n      brandName: '',\n      brandCompany: '',\n      brandDescription: ''\n    };\n\n    this.submitBrand = event => {\n      event.preventDefault();\n      const brand = {\n        brandCategory: this.state.brandCategory,\n        brandName: this.state.brandName,\n        brandCompany: this.state.brandCompany,\n        brandDescription: this.state.brandDescription\n      };\n      axios.post(\"http://localhost:8082/rest/brands\", brand).then(response => {\n        if (response.data != null) {\n          this.setState(this.initialState);\n          alert(\"Brand saved successfully!\");\n        }\n      });\n    };\n\n    this.updateBrand = event => {\n      event.preventDefault();\n      const brand = {\n        brandCategory: this.state.brandCategory,\n        brandName: this.state.brandName,\n        brandCompany: this.state.brandCompany,\n        brandDescription: this.state.brandDescription\n      };\n      axios.put(\"http://localhost:8082/rest/brands\", brand).then(response => {\n        if (response.data != null) {\n          this.setState(this.initialState);\n          setTimeout(() => this.brandList(), 1000);\n        }\n      });\n    };\n\n    this.brandList = () => {\n      return this.props.history.push(\"/viewBrand\");\n    };\n\n    this.brandChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.resetBrand = () => {\n      this.setState(this.initialState);\n    };\n\n    this.state = this.initialState;\n    this.brandChange = this.brandChange.bind(this);\n    this.submitBrand = this.submitBrand.bind(this);\n    this.resetBrand = this.resetBrand.bind(this);\n    this.updateBrand = this.updateBrand.bind(this);\n    this.brandList = this.brandList.bind(this);\n  }\n\n  componentDidMount() {\n    const brandId = +this.props.match.params.id;\n\n    if (brandId) {\n      axios.get(\"http://localhost:8082/rest/brands/\" + brandId).then(response => {\n        this.setState({\n          id: response.data.id,\n          brandCategory: response.data.brandCategory,\n          brandName: response.data.brandName,\n          brandCompany: response.data.brandCompany,\n          brandDescription: response.data.brandDescription\n        });\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Card, {\n      className: \"border border-light bg-light\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \" \", this.state.id ? \"Update\" : \"Save\", \" A New Brand\"), React.createElement(Form, {\n      onReset: this.resetBrand,\n      onSubmit: this.state.id ? this.updateBrand : this.submitBrand,\n      id: \"brandFormId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Brand Category\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"brandCategory\",\n      value: this.state.brandCategory,\n      onChange: this.brandChange,\n      className: \"bg-light\",\n      placeholder: \"Enter brand category: high-end, local designer...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridColor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Brand Name\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"brandName\",\n      value: this.state.brandName,\n      onChange: this.brandChange,\n      className: \"bg-light\",\n      placeholder: \"Enter brand name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridBarcode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Brand Company\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"brandCompany\",\n      value: this.state.brandCompany,\n      onChange: this.brandChange,\n      className: \"bg-light\",\n      placeholder: \"Enter brand company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPrimeCost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Brand Description\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"brandDescription\",\n      value: this.state.brandDescription,\n      onChange: this.brandChange,\n      className: \"bg-light\",\n      placeholder: \"Enter brand description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))), React.createElement(Card.Footer, {\n      style: {\n        \"textAlign\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), \" \", this.state.id ? \"Update\" : \"Save\"), \" \", React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"repeat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \" Reset\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/AddNewBrand.js"],"names":["React","Component","Card","Form","Button","Col","Icon","axios","AddNewBrand","constructor","props","initialState","id","brandCategory","brandName","brandCompany","brandDescription","submitBrand","event","preventDefault","brand","state","post","then","response","data","setState","alert","updateBrand","put","setTimeout","brandList","history","push","brandChange","target","name","value","resetBrand","bind","componentDidMount","brandId","match","params","get","catch","error","console","render","margin"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Card,Form, Button, Col} from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react'\nimport axios from 'axios';\n\nexport default class AddNewBrand extends Component{\n    constructor(props){\n\t\tsuper(props);\n\t\tthis.state = this.initialState;\n\t\tthis.brandChange = this.brandChange.bind(this);\n        this.submitBrand = this.submitBrand.bind(this);\n\t\tthis.resetBrand = this.resetBrand.bind(this);\n\t\tthis.updateBrand = this.updateBrand.bind(this);\n\t\tthis.brandList = this.brandList.bind(this);\n    }\n    \n    initialState={\n        id:'',brandCategory:'',brandName:'',brandCompany:'',brandDescription:''};\n\t\n\tcomponentDidMount(){\n\t\tconst brandId = +this.props.match.params.id;\n\t\tif(brandId){\n\t\t\taxios.get(\"http://localhost:8082/rest/brands/\"+brandId)\n\t\t\t.then(response => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: response.data.id,\n\t\t\t\t\tbrandCategory: response.data.brandCategory,\n\t\t\t\t\tbrandName: response.data.brandName,\n\t\t\t\t\tbrandCompany: response.data.brandCompany,\n\t\t\t\t\tbrandDescription: response.data.brandDescription\n\t\t\t\t});\n\n\t\t\t}).catch((error)=>{\n\t\t\t\tconsole.error(\"Error: \" + error);\n\t\t\t});\n\t\t}\n\t\t\t\n\t}\n\n    submitBrand = event => {\n\t\tevent.preventDefault();\n\t\t\n\t\tconst brand = {\n            brandCategory: this.state.brandCategory, \n            brandName:this.state.brandName, \n            brandCompany:this.state.brandCompany, \n            brandDescription: this.state.brandDescription\n\t\t};\n\t\t\n\t\taxios.post(\"http://localhost:8082/rest/brands\",brand)\n\t\t       .then(response => {\n\t\t    \t   if(response.data != null){\n\t\t    \t\t   this.setState(this.initialState);\n\t\t    \t\t   alert(\"Brand saved successfully!\");\n\t\t    \t   }\n\t\t       }\n\t\t    \t\t   \n\t\t    \t\t   \n\t\t       );\n\t};\n\t\n\tupdateBrand = event =>{\n\t\tevent.preventDefault();\n\t\tconst brand = {\n            brandCategory: this.state.brandCategory, \n            brandName:this.state.brandName, \n            brandCompany:this.state.brandCompany, \n            brandDescription: this.state.brandDescription\n\t\t};\n\t\taxios.put(\"http://localhost:8082/rest/brands\",brand)\n\t\t       .then(response => {\n\t\t    \t   if(response.data != null){\n\t\t    \t\t   this.setState(this.initialState);\n\t\t    \t\t   setTimeout(()=> this.brandList(),1000);\n\t\t    \t   }\n\t\t       }\n\t\t    \t\t   \n\t\t    \t\t   \n\t\t       );\n\n\t};\n\n\tbrandList=()=>{\n\t\treturn this.props.history.push(\"/viewBrand\");\n\t};\n\n    brandChange = event =>{\n\t\tthis.setState({\n\t\t\t[event.target.name]:event.target.value\n\t\t});\n\t};\n\n\t\n\tresetBrand= () => {\n\t\tthis.setState(this.initialState);\n    };\n    \n    render(){\n\t\treturn(\n\t\t\t\t<Card className=\"border border-light bg-light\" style={{margin: \"20px\"}}>\n\t\t\t\t\t<Card.Header><Icon name='plus square' /> {this.state.id ? \"Update\" : \"Save\"} A New Brand</Card.Header>\n\t\t\t\t\t<Form onReset={this.resetBrand} onSubmit={this.state.id ? this.updateBrand : this.submitBrand} id=\"brandFormId\">\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t  <Form.Group as={Col} controlId=\"formGridName\">\n\t\t\t\t\t\t    <Form.Label>Brand Category</Form.Label>\n\t\t\t\t\t\t    <Form.Control required autoComplete=\"off\"\n\t\t\t\t\t\t    \ttype=\"text\" \n\t\t\t\t\t\t    \tname=\"brandCategory\" \n\t\t\t\t\t\t    \tvalue={this.state.brandCategory}\n\t\t\t\t\t\t    \tonChange={this.brandChange}\n\t\t\t\t\t\t    \tclassName={\"bg-light\"} \n\t\t\t\t\t\t    \tplaceholder=\"Enter brand category: high-end, local designer...\" />\n\t\t\t\t\t\t  </Form.Group>\n\t\t\t\t\t\t  <Form.Group as={Col} controlId=\"formGridColor\">\n\t\t\t\t\t\t    <Form.Label>Brand Name</Form.Label>\n\t\t\t\t\t\t    <Form.Control required autoComplete=\"off\" \n\t\t\t\t\t\t    type=\"text\" \n\t\t\t\t\t\t    name=\"brandName\"\n\t\t\t\t\t\t    value={this.state.brandName}\n\t\t\t\t\t    \tonChange={this.brandChange}\n\t\t\t\t\t\t    className={\"bg-light\"} placeholder=\"Enter brand name\" />\n\t\t\t\t\t\t  </Form.Group>\n\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t  <Form.Group as={Col}  controlId=\"formGridBarcode\">\n\t\t\t\t\t\t    <Form.Label>Brand Company</Form.Label>\n\t\t\t\t\t\t    <Form.Control required autoComplete=\"off\"\n\t\t\t\t\t\t    type=\"text\" \n\t\t\t\t\t\t    name=\"brandCompany\"\n\t\t\t\t\t\t    value={this.state.brandCompany}\n\t\t\t\t\t    \tonChange={this.brandChange}\n\t\t\t\t\t\t    className={\"bg-light\"} placeholder=\"Enter brand company\" />\n\t\t\t\t\t\t  </Form.Group>\n\t\t\t\t\t\t  <Form.Group as={Col} controlId=\"formGridPrimeCost\">\n\t\t\t\t\t\t    <Form.Label>Brand Description</Form.Label>\n\t\t\t\t\t\t    <Form.Control required autoComplete=\"off\"\n\t\t\t\t\t\t    type=\"text\" \n\t\t\t\t\t\t    name=\"brandDescription\"\n\t\t\t\t\t\t    value={this.state.brandDescription}\n\t\t\t\t\t    \tonChange={this.brandChange}\n\t\t\t\t\t\t    className={\"bg-light\"} placeholder=\"Enter brand description\" />\n\t\t\t\t\t\t  </Form.Group>\n\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t\t\n\t\t\t\t\t</Card.Body>\n\t\t\t\t\t<Card.Footer style={{\"textAlign\":\"right\"}}>\n\t\t\t\t\t  <Button size=\"sm\" variant=\"success\" type=\"submit\">\n\t\t\t\t\t\t<Icon name='save' /> {this.state.id ? \"Update\" : \"Save\"}\n\t\t\t\t\t  </Button>{\" \"}\n\t\t\t\t\t  <Button size=\"sm\" variant=\"info\" type=\"reset\">\n\t\t\t\t\t  <Icon name='repeat' /> Reset\n\t\t\t\t\t  </Button>\n\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t</Form>\n\t\t\t\t</Card>\n\t\t\t\t\n\t\t);\n\t}\n\n    \n\n\n\n}"]},"metadata":{},"sourceType":"module"}