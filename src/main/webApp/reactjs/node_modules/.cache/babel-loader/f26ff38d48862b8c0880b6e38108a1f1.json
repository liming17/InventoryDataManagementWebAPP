{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/ViewOrder.js\";\nimport React, { Component } from 'react';\nimport { Card, Form, Col, Row, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport { CardFooter } from 'reactstrap';\nimport axios from 'axios';\nimport * as moment from 'moment';\nimport { connect } from 'react-redux';\nimport { changeProductAmount, subProductAmount, addProductAmount, resetState } from '../services/order/OrderActions';\n\nclass ViewOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.initialOrderState = {\n      id: '',\n      date: new Date(),\n      c_date: new Date(),\n      order_type: 'purchase',\n      order_status: 'pending',\n      empId: '',\n      addedProducts: []\n    };\n\n    this.postOrder = () => {\n      // need to post the order info here\n      // this.props.productData.addedProducts.map((product)=>{\n      //     const p = {id:product.id, amount:product.amount};\n      //     this.setState({\n      //         addedProducts:[...this.state.addedProducts,p]\n      //     });\n      //     alert(this.state.addedProducts.length);\n      // });\n      const p = this.props.productData.addedProducts.map(({\n        id,\n        amount\n      }) => ({\n        id,\n        amount\n      }));\n      this.setState({\n        addedProducts: [...p]\n      });\n      alert(p.length);\n      alert(this.state.addedProducts.length);\n      const orderInfo = {\n        id: this.state.id,\n        date: moment(this.state.date).format(\"YYYY-MM-DD\"),\n        c_date: moment(this.state.c_date).format(\"YYYY-MM-DD\"),\n        order_type: this.state.order_type,\n        order_status: this.state.order_status,\n        empId: this.state.empId,\n        addedProducts: [{\n          id: 1,\n          amount: 7\n        }, {\n          id: 2,\n          amount: 7\n        }]\n      }; // axios.post(\"http://localhost:8082/rest/orderInfo/saveOrderInfo\",orderInfo)\n      //   .then(response =>{\n      //       if(response.data != null){\n      //           this.setState(this.initialOrderState);\n      //           this.props.resetState();\n      //       }\n      //   })\n    };\n\n    this.changeProductAmount = (id, event) => {\n      let amount = event.target.value;\n\n      if (amount >= 0) {\n        this.props.changeAmount(id, amount);\n      } else {\n        alert(\"The product amount can't be less than 0\");\n      }\n    };\n\n    this.substractAmount = id => {\n      this.props.substractAmount(id);\n    };\n\n    this.addAmount = id => {\n      this.props.addAmount(id);\n    };\n\n    this.infoChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleStartDateChange = sDate => {\n      this.setState({\n        date: sDate\n      });\n    };\n\n    this.handleEndDateChange = eDate => {\n      this.setState({\n        c_date: eDate\n      });\n    };\n\n    this.state = this.initialOrderState;\n  }\n\n  componentDidMount() {\n    this.setState({\n      date: this.props.productData.order.date,\n      c_date: this.props.productData.order.c_date,\n      order_type: this.props.productData.order.order_type,\n      order_status: this.props.productData.order.order_status,\n      empId: this.props.productData.order.empId\n    });\n  }\n\n  render() {\n    const pageCss = {\n      width: \"45px\",\n      border: \"1px solid #9FC2E8\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return React.createElement(Card, {\n      className: \"border border-light bg-light\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Review Order Info \"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      style: {\n        marginLeft: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Order Type :\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"order_type\",\n      value: this.state.order_type,\n      onChange: this.infoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"purchase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"purchase\"), React.createElement(\"option\", {\n      value: \"sale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"sale\"), React.createElement(\"option\", {\n      value: \"outbound\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"outbound\"))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridColor\",\n      style: {\n        marginLeft: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Order Status :\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"order_status\",\n      value: this.state.order_status,\n      onChange: this.infoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"pending\"), React.createElement(\"option\", {\n      value: \"complete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"complete\")))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        marginRight: \"20px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Issue Date: \"), React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.handleStartDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        marginRight: \"20px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Complete Date: \"), React.createElement(DatePicker, {\n      selected: this.state.c_date,\n      onChange: this.handleEndDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formGridSalePrice\",\n      style: {\n        marginLeft: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Employee ID :\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"empId\",\n      value: this.state.empId,\n      onChange: this.infoChange,\n      className: \"bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))))), React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      striped: true,\n      responsive: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Color\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Barcode\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Purchase Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Sale Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Brand\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Style\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Order Amount\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.props.productData.addedProducts.length === 0 ? React.createElement(\"tr\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \" 0 product added. \")) : this.props.productData.addedProducts.map(product => React.createElement(\"tr\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, product.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, product.color), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, product.barcode), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, product.prime_cost), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, product.sale_price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, product.brand_name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, product.size), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, product.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, product.style), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      disabled: product.amount === 0 ? true : false,\n      onClick: () => {\n        this.substractAmount(product.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"-\")), React.createElement(FormControl, {\n      style: pageCss,\n      name: \"amount\",\n      value: product.amount,\n      onChange: event => {\n        this.changeAmount(product.id, event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      onClick: () => {\n        this.addAmount(product.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"+\"))))))))), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        \"float\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      onClick: this.postOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Confirm\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    productData: state.getProduct\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeAmount: (id, amount) => {\n      dispatch(changeProductAmount(id, amount));\n    },\n    substractAmount: id => {\n      dispatch(subProductAmount(id));\n    },\n    addAmount: id => {\n      dispatch(addProductAmount(id));\n    },\n    resetState: () => {\n      dispatch(resetState());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrder);","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/ViewOrder.js"],"names":["React","Component","Card","Form","Col","Row","Table","Button","InputGroup","FormControl","DatePicker","CardFooter","axios","moment","connect","changeProductAmount","subProductAmount","addProductAmount","resetState","ViewOrder","constructor","props","initialOrderState","id","date","Date","c_date","order_type","order_status","empId","addedProducts","postOrder","p","productData","map","amount","setState","alert","length","state","orderInfo","format","event","target","value","changeAmount","substractAmount","addAmount","infoChange","preventDefault","name","handleStartDateChange","sDate","handleEndDateChange","eDate","componentDidMount","order","render","pageCss","width","border","textAlign","fontWeight","margin","marginLeft","marginRight","product","color","barcode","prime_cost","sale_price","brand_name","size","category","style","mapStateToProps","getProduct","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Card,Form,Col,Row,Table, Button,InputGroup, FormControl} from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\n\nimport { CardFooter } from 'reactstrap';\nimport axios from 'axios';\n\nimport * as moment from 'moment';\n\nimport {connect} from 'react-redux';\nimport {changeProductAmount,subProductAmount,addProductAmount,resetState} from '../services/order/OrderActions';\n\n\nclass ViewOrder extends Component{\n    constructor(props){\n        super(props);\n        this.state = this.initialOrderState;\n    }\n\n    initialOrderState = {\n        id:'',date:new Date(), c_date:new Date(), order_type:'purchase', order_status:'pending', empId:'',addedProducts:[]\n    };\n    \n    componentDidMount(){\n      this.setState({\n        date:this.props.productData.order.date,\n        c_date:this.props.productData.order.c_date,\n        order_type:this.props.productData.order.order_type,\n        order_status:this.props.productData.order.order_status,\n        empId:this.props.productData.order.empId\n      });\n    }\n\n    postOrder = () =>{\n        // need to post the order info here\n\n        // this.props.productData.addedProducts.map((product)=>{\n        //     const p = {id:product.id, amount:product.amount};\n\n        //     this.setState({\n        //         addedProducts:[...this.state.addedProducts,p]\n        //     });\n\n        //     alert(this.state.addedProducts.length);\n        // });\n\n        const p =this.props.productData.addedProducts.map(({id,amount})=>({id,amount}));\n        this.setState({addedProducts:[...p]});\n        alert(p.length);\n        alert(this.state.addedProducts.length);\n\n\n        const orderInfo = {\n            id:this.state.id,\n            date: moment(this.state.date).format(\"YYYY-MM-DD\"),\n            c_date : moment(this.state.c_date).format(\"YYYY-MM-DD\"),\n            order_type : this.state.order_type,\n            order_status : this.state.order_status,\n            empId: this.state.empId,\n            addedProducts:[\n                        {id:1, amount: 7},\n                        {id:2, amount: 7}\n                    ]\n        }\n\n        // axios.post(\"http://localhost:8082/rest/orderInfo/saveOrderInfo\",orderInfo)\n        //   .then(response =>{\n        //       if(response.data != null){\n        //           this.setState(this.initialOrderState);\n        //           this.props.resetState();\n        //       }\n        //   })\n\n    }\n\n    changeProductAmount = (id,event) =>{\n        let amount = event.target.value;\n        if(amount >= 0){\n            this.props.changeAmount(id,amount);\n        }else{\n            alert(\"The product amount can't be less than 0\");\n        }\n    }\n\n    substractAmount = (id)=>{\n        this.props.substractAmount(id);\n    }\n\n    addAmount = (id)=>{\n        this.props.addAmount(id);\n    }\n\n    infoChange = event =>{\n        event.preventDefault();\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    }\n\n    handleStartDateChange = sDate =>{\n        this.setState({\n            date:sDate\n        });\n    }\n  \n    handleEndDateChange = eDate =>{\n      this.setState({\n            c_date:eDate\n      });\n   }\n\n\n\n\n    render(){\n        const pageCss={\n            width:\"45px\",\n            border:\"1px solid #9FC2E8\",\n            textAlign:\"center\",\n            fontWeight:\"bold\"\n        }\n    return(\n\n        <Card className=\"border border-light bg-light\" style={{margin: \"20px\"}}>\n            <Card.Header>Review Order Info </Card.Header>\n                <Card.Body>\n                <Form>\n                <Form.Row>\n                      <Form.Group as={Col} controlId=\"formGridName\" style={{marginLeft: \"5px\",fontWeight:\"bold\"}}>\n                        <Form.Label>Order Type :</Form.Label>\n                        <Form.Control as=\"select\"\n                            name=\"order_type\" \n                            value={this.state.order_type}\n                            onChange={this.infoChange}>\n                                <option value=\"purchase\">purchase</option>\n                                <option value=\"sale\">sale</option>\n                                <option value=\"outbound\">outbound</option>\n                            </Form.Control>      \n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formGridColor\" style={{marginLeft: \"5px\",fontWeight:\"bold\"}}>\n                        <Form.Label>Order Status :</Form.Label>\n                        <Form.Control as=\"select\"\n                            name=\"order_status\" \n                            value={this.state.order_status}\n                            onChange={this.infoChange}>\n                                <option value=\"pending\">pending</option>\n                                <option value=\"complete\">complete</option>\n                            </Form.Control>\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridSDate\">\n                        <Form.Label style={{marginRight: \"20px\",fontWeight:\"bold\"}}>Issue Date: </Form.Label>\n                        <DatePicker\n                        selected={this.state.date}\n                        onChange={this.handleStartDateChange}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridEDate\" >\n                        <Form.Label style={{marginRight: \"20px\",fontWeight:\"bold\"}}>Complete Date: </Form.Label>\n                        <DatePicker\n                        selected={this.state.c_date}\n                        onChange={this.handleEndDateChange}\n                        />\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group as={Row} controlId=\"formGridSalePrice\" style={{marginLeft: \"5px\",fontWeight:\"bold\"}}>\n                        <Form.Label>Employee ID :</Form.Label>\n                            <Col sm={10}>\n                               <Form.Control required autoComplete=\"off\"\n                        type=\"text\"\n                        name=\"empId\"\n                        value={this.state.empId}\n                        onChange={this.infoChange}\n                        className={\"bg-light\"}/> \n                            </Col>\n                      </Form.Group>\n                    </Form.Row>\n                </Form>\n\n\n                    <Table bordered hover striped responsive=\"xl\">\n                    <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Color</th>\n                      <th>Barcode</th>\n                      <th>Purchase Price</th>\n                      <th>Sale Price</th>\n                      <th>Brand</th>\n                      <th>Size</th>\n                      <th>Category</th>\n                      <th>Style</th>\n                      <th>Order Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                   \n                  {this.props.productData.addedProducts.length === 0 ? \n                          <tr align=\"center\">\n                           <td colSpan=\"11\"> 0 product added. </td>\n                          </tr> :\n                        this.props.productData.addedProducts.map((product) => (\n                                <tr key={product.id}>\n                                  <td>{product.name}</td>\n                                  <td>{product.color}</td>\n                                  <td>{product.barcode}</td>\n                                  <td>{product.prime_cost}</td>\n                                  <td>{product.sale_price}</td>\n                                  <td>{product.brand_name}</td>\n                                  <td>{product.size}</td>\n                                  <td>{product.category}</td>\n                                  <td>{product.style}</td>\n                                  <td>\n                                  <InputGroup size=\"sm\">\n                           <InputGroup.Prepend>\n                             <Button type=\"button\" variant=\"outline-info\" disabled={product.amount === 0 ? true:false}\n                               onClick={()=>{this.substractAmount(product.id)}}>\n                                 -\n                             </Button>\n                           </InputGroup.Prepend>\n\n                           <FormControl style={pageCss} name=\"amount\" value={product.amount}\n                             onChange={(event) => {this.changeAmount(product.id,event)}}/>\n\n                           <InputGroup.Append>\n                           <Button type=\"button\" variant=\"outline-info\" onClick={()=>{this.addAmount(product.id)}}>\n                                +\n                             </Button>\n                             \n                           </InputGroup.Append>\n                         \n                         </InputGroup>\n                                  \n                                      </td>\n                                  \n                                </tr>\n                                ))\n                  \n                  }\n                  \n                  </tbody>\n                    </Table>\n                \n                </Card.Body>\n                <CardFooter>\n                    <div style={{\"float\":\"right\"}}>\n                         <Button type=\"button\" variant=\"outline-info\" \n                               onClick={this.postOrder}>\n                                 Confirm\n                        </Button>\n                    </div>\n                </CardFooter>\n        </Card>\n\n            \n    );\n} \n}\n\nconst mapStateToProps = state => {\n    return {\n        productData : state.getProduct\n    }\n }\n\n const mapDispatchToProps = dispatch => {\n    return {\n\n        changeAmount : (id,amount) =>{\n            dispatch(changeProductAmount(id,amount))\n        },\n        substractAmount : (id) =>{\n            dispatch(subProductAmount(id))\n        },\n        addAmount : (id) =>{\n            dispatch(addProductAmount(id))\n        },\n        resetState: () =>{\n            dispatch(resetState());\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ViewOrder);"]},"metadata":{},"sourceType":"module"}