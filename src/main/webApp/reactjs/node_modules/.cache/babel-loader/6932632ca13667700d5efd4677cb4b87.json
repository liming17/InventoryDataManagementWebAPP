{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/AddNewEmployee.js\";\nimport React, { Component } from 'react';\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class AddNewEmployee extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      lName: 'wang',\n      fName: 'dehua',\n      sinNum: '',\n      phoneNum: '',\n      email: '',\n      payGrade: '',\n      status: '',\n      startDate: new Date(),\n      endDate: new Date()\n    };\n\n    this.submitEmployee = event => {\n      event.preventDefault();\n      const employeeInfo = {\n        fName: this.state.fName,\n        lName: this.state.lName,\n        sinNum: this.state.sinNum,\n        phoneNum: this.state.phoneNum,\n        email: this.state.email,\n        payGrade: this.state.payGrade,\n        status: this.state.status,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate\n      };\n      alert(employeeInfo);\n      axios.post(\"http://localhost:8082/rest/employee\", employeeInfo).then(response => {\n        if (response.data != null) {\n          this.setState(this.initialState);\n          alert(\"Employee Info saved successfully!\");\n        }\n      });\n    };\n\n    this.updateEmployee = event => {\n      event.preventDefault();\n      const employeeInfo = {\n        id: this.state.id,\n        lName: this.state.lName,\n        fName: this.state.fName,\n        sinNum: this.state.sinNum,\n        phoneNum: this.state.phoneNum,\n        email: this.state.email,\n        payGrade: this.state.payGrade,\n        status: this.state.status,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate\n      };\n      axios.put(\"http://localhost:8082/rest/employee\", employeeInfo).then(response => {\n        if (response.data != null) {\n          this.setState(this.initialState);\n          setTimeout(() => this.employeeList(), 1000);\n        }\n      });\n    };\n\n    this.employeeList = () => {\n      return this.props.history.push(\"/viewEmployee\");\n    };\n\n    this.InfoChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleStartDateChange = sDate => {\n      this.setState({\n        startDate: sDate\n      });\n    };\n\n    this.handleEndDateChange = eDate => {\n      this.setState({\n        endDate: eDate\n      });\n    };\n\n    this.resetInfo = () => {\n      this.setState(this.initialState);\n    };\n\n    this.showState = () => {\n      alert(\"the firstname :\" + this.state.fName + this.state.lName);\n    };\n\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    const employeeId = +this.props.match.params.id;\n\n    if (employeeId) {\n      axios.get(\"http://localhost:8082/rest/employee/\" + employeeId).then(response => {\n        this.setState({\n          id: response.data.id,\n          lName: response.data.lName,\n          fName: response.data.fName,\n          sinNum: response.data.sinNum,\n          phoneNum: response.data.phoneNum,\n          email: response.data.email,\n          payGrade: response.data.payGrade,\n          status: response.data.status,\n          startDate: response.data.startDate,\n          endDate: response.data.endDate\n        });\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Card, {\n      className: \"border border-light bg-light\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \" \", this.state.id ? \"Update\" : \"Save\", \" A New Employee Into Employee List\"), React.createElement(Form, {\n      onReset: this.resetInfo,\n      onSubmit: this.state.id ? this.updateEmployee : this.submitEmployee,\n      id: \"employeeFormId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridLName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"lName\",\n      value: this.state.lName,\n      onChange: this.InfoChange,\n      className: \"bg-light\",\n      placeholder: \"Enter employee's last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridFName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"fName\",\n      value: this.state.fName,\n      onChange: this.InfoChange,\n      className: \"bg-light\",\n      placeholder: \"Enter employee's first name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSIN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"SIN\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"sinNum\",\n      value: this.state.sinNum,\n      onChange: this.InfoChange,\n      className: \"bg-light\",\n      placeholder: \"Enter SIN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPrimePhoneNum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"phoneNum\",\n      value: this.state.phoneNum,\n      onChange: this.InfoChange,\n      className: \"bg-light\",\n      placeholder: \"Enter Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      autoComplete: \"off\",\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.InfoChange,\n      className: \"bg-light\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPayGrade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Pay Grade\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"payGrade\",\n      value: this.state.payGrade,\n      onChange: this.InfoChange,\n      className: \"bg-light\",\n      placeholder: \"Enter pay grade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridStatus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"status\",\n      value: this.state.status,\n      onChange: this.InfoChange,\n      className: \"bg-light\",\n      placeholder: \"Enter Status: part-time, full-time...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleStartDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(DatePicker, {\n      selected: this.state.endDate,\n      onChange: this.handleEndDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })))), React.createElement(Card.Footer, {\n      style: {\n        \"textAlign\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), \" \", this.state.id ? \"Update\" : \"Save\"), \" \", !this.state.id && React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"repeat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), \" Reset\"), \" \", \" \", React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      onClick: this.showState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), \" show current state\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/AddNewEmployee.js"],"names":["React","Component","Card","Form","Button","Col","Icon","axios","DatePicker","AddNewEmployee","constructor","props","initialState","id","lName","fName","sinNum","phoneNum","email","payGrade","status","startDate","Date","endDate","submitEmployee","event","preventDefault","employeeInfo","state","alert","post","then","response","data","setState","updateEmployee","put","setTimeout","employeeList","history","push","InfoChange","target","name","value","handleStartDateChange","sDate","handleEndDateChange","eDate","resetInfo","showState","componentDidMount","employeeId","match","params","get","catch","error","console","render","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,GAA3B,QAAqC,iBAArC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AAEA,eAAe,MAAMC,cAAN,SAA6BR,SAA7B,CAAsC;AACnDS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACf,UAAMA,KAAN;AADe,SAKlBC,YALkB,GAKH;AACbC,MAAAA,EAAE,EAAC,EADU;AACNC,MAAAA,KAAK,EAAC,MADA;AACQC,MAAAA,KAAK,EAAC,OADd;AACuBC,MAAAA,MAAM,EAAC,EAD9B;AACkCC,MAAAA,QAAQ,EAAC,EAD3C;AAC+CC,MAAAA,KAAK,EAAC,EADrD;AACyDC,MAAAA,QAAQ,EAAC,EADlE;AACsEC,MAAAA,MAAM,EAAC,EAD7E;AACiFC,MAAAA,SAAS,EAAC,IAAIC,IAAJ,EAD3F;AACuGC,MAAAA,OAAO,EAAE,IAAID,IAAJ;AADhH,KALG;;AAAA,SAgClBE,cAhCkB,GAgCDC,KAAK,IAAG;AACvBA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,YAAY,GAAG;AACjBZ,QAAAA,KAAK,EAAE,KAAKa,KAAL,CAAWb,KADD;AAEjBD,QAAAA,KAAK,EAAE,KAAKc,KAAL,CAAWd,KAFD;AAGjBE,QAAAA,MAAM,EAAE,KAAKY,KAAL,CAAWZ,MAHF;AAIjBC,QAAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWX,QAJJ;AAKjBC,QAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWV,KALD;AAMjBC,QAAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWT,QANJ;AAOjBC,QAAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWR,MAPF;AAQjBC,QAAAA,SAAS,EAAE,KAAKO,KAAL,CAAWP,SARL;AASjBE,QAAAA,OAAO,EAAE,KAAKK,KAAL,CAAWL;AATH,OAArB;AAYAM,MAAAA,KAAK,CAACF,YAAD,CAAL;AAEApB,MAAAA,KAAK,CAACuB,IAAN,CAAW,qCAAX,EAAiDH,YAAjD,EACCI,IADD,CACMC,QAAQ,IAAE;AACZ,YAAGA,QAAQ,CAACC,IAAT,IAAiB,IAApB,EAAyB;AACrB,eAAKC,QAAL,CAAc,KAAKtB,YAAnB;AACAiB,UAAAA,KAAK,CAAC,mCAAD,CAAL;AACH;AACJ,OAND;AAOD,KAxDiB;;AAAA,SA0DlBM,cA1DkB,GA0DDV,KAAK,IAAG;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,YAAY,GAAG;AACnBd,QAAAA,EAAE,EAAE,KAAKe,KAAL,CAAWf,EADI;AAEnBC,QAAAA,KAAK,EAAE,KAAKc,KAAL,CAAWd,KAFC;AAGnBC,QAAAA,KAAK,EAAE,KAAKa,KAAL,CAAWb,KAHC;AAInBC,QAAAA,MAAM,EAAE,KAAKY,KAAL,CAAWZ,MAJA;AAKnBC,QAAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWX,QALF;AAMnBC,QAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWV,KANC;AAOnBC,QAAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWT,QAPF;AAQnBC,QAAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWR,MARA;AASnBC,QAAAA,SAAS,EAAE,KAAKO,KAAL,CAAWP,SATH;AAUnBE,QAAAA,OAAO,EAAE,KAAKK,KAAL,CAAWL;AAVD,OAArB;AAYFhB,MAAAA,KAAK,CAAC6B,GAAN,CAAU,qCAAV,EAAgDT,YAAhD,EACCI,IADD,CACMC,QAAQ,IAAE;AACZ,YAAGA,QAAQ,CAACC,IAAT,IAAiB,IAApB,EAAyB;AACrB,eAAKC,QAAL,CAAc,KAAKtB,YAAnB;AACAyB,UAAAA,UAAU,CAAC,MAAK,KAAKC,YAAL,EAAN,EAA0B,IAA1B,CAAV;AACH;AACJ,OAND;AAOD,KA/EiB;;AAAA,SAiFlBA,YAjFkB,GAiFH,MAAI;AACf,aAAO,KAAK3B,KAAL,CAAW4B,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB,CAAP;AACH,KAnFiB;;AAAA,SAqFlBC,UArFkB,GAqFLhB,KAAK,IAAG;AACnB,WAAKS,QAAL,CAAc;AACV,SAACT,KAAK,CAACiB,MAAN,CAAaC,IAAd,GAAoBlB,KAAK,CAACiB,MAAN,CAAaE;AADvB,OAAd;AAGD,KAzFiB;;AAAA,SA2FlBC,qBA3FkB,GA2FMC,KAAK,IAAG;AAC5B,WAAKZ,QAAL,CAAc;AACVb,QAAAA,SAAS,EAACyB;AADA,OAAd;AAGH,KA/FiB;;AAAA,SAiGlBC,mBAjGkB,GAiGIC,KAAK,IAAG;AAC5B,WAAKd,QAAL,CAAc;AACVX,QAAAA,OAAO,EAACyB;AADE,OAAd;AAGH,KArGmB;;AAAA,SAuGlBC,SAvGkB,GAuGP,MAAM;AACf,WAAKf,QAAL,CAAc,KAAKtB,YAAnB;AACD,KAzGiB;;AAAA,SA2GlBsC,SA3GkB,GA2GN,MAAI;AACZrB,MAAAA,KAAK,CAAC,oBAAoB,KAAKD,KAAL,CAAWb,KAA/B,GAAuC,KAAKa,KAAL,CAAWd,KAAnD,CAAL;AACH,KA7GiB;;AAEf,SAAKc,KAAL,GAAa,KAAKhB,YAAlB;AACF;;AAMDuC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,UAAU,GAAG,CAAC,KAAKzC,KAAL,CAAW0C,KAAX,CAAiBC,MAAjB,CAAwBzC,EAA5C;;AACA,QAAGuC,UAAH,EAAc;AACZ7C,MAAAA,KAAK,CAACgD,GAAN,CAAU,yCAAuCH,UAAjD,EACCrB,IADD,CACMC,QAAQ,IAAG;AACb,aAAKE,QAAL,CAAc;AACVrB,UAAAA,EAAE,EAAEmB,QAAQ,CAACC,IAAT,CAAcpB,EADR;AAEVC,UAAAA,KAAK,EAAEkB,QAAQ,CAACC,IAAT,CAAcnB,KAFX;AAGVC,UAAAA,KAAK,EAAEiB,QAAQ,CAACC,IAAT,CAAclB,KAHX;AAIVC,UAAAA,MAAM,EAAEgB,QAAQ,CAACC,IAAT,CAAcjB,MAJZ;AAKVC,UAAAA,QAAQ,EAAEe,QAAQ,CAACC,IAAT,CAAchB,QALd;AAMVC,UAAAA,KAAK,EAAEc,QAAQ,CAACC,IAAT,CAAcf,KANX;AAOVC,UAAAA,QAAQ,EAAEa,QAAQ,CAACC,IAAT,CAAcd,QAPd;AAQVC,UAAAA,MAAM,EAAEY,QAAQ,CAACC,IAAT,CAAcb,MARZ;AASVC,UAAAA,SAAS,EAAEW,QAAQ,CAACC,IAAT,CAAcZ,SATf;AAUVE,UAAAA,OAAO,EAAES,QAAQ,CAACC,IAAT,CAAcV;AAVb,SAAd;AAYH,OAdD,EAcGiC,KAdH,CAcUC,KAAD,IAAS;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,YAAYA,KAA1B;AACH,OAhBD;AAiBD;AACJ;;AAiFDE,EAAAA,MAAM,GAAE;AACN,WACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAA+C,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb,OAA0C,KAAKhC,KAAL,CAAWf,EAAX,GAAgB,QAAhB,GAA2B,MAArE,uCADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKoC,SAApB;AAA+B,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWf,EAAX,GAAgB,KAAKsB,cAArB,GAAsC,KAAKX,cAApF;AAAoG,MAAA,EAAE,EAAC,gBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnB,GAAhB;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,YAAY,EAAC,KAApC;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWd,KAHtB;AAII,MAAA,QAAQ,EAAE,KAAK2B,UAJnB;AAKI,MAAA,SAAS,EAAE,UALf;AAMI,MAAA,WAAW,EAAC,4BANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAWE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEpC,GAAhB;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,YAAY,EAAC,KAApC;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,OAFL;AAGA,MAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWb,KAHlB;AAIA,MAAA,QAAQ,EAAE,KAAK0B,UAJf;AAKA,MAAA,SAAS,EAAE,UALX;AAKuB,MAAA,WAAW,EAAC,6BALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,CADJ,EAsBI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEpC,GAAhB;AAAsB,MAAA,SAAS,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,YAAY,EAAC,KAApC;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,QAFL;AAGA,MAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWZ,MAHlB;AAIA,MAAA,QAAQ,EAAE,KAAKyB,UAJf;AAKA,MAAA,SAAS,EAAE,UALX;AAKuB,MAAA,WAAW,EAAC,WALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEpC,GAAhB;AAAqB,MAAA,SAAS,EAAC,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,YAAY,EAAC,KAApC;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWX,QAHlB;AAIA,MAAA,QAAQ,EAAE,KAAKwB,UAJf;AAKA,MAAA,SAAS,EAAE,UALX;AAKuB,MAAA,WAAW,EAAC,oBALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,CAtBJ,EA0CI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEpC,GAAhB;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,YAAY,EAAC,KAA3B;AACA,MAAA,IAAI,EAAC,OADL;AAEA,MAAA,IAAI,EAAC,OAFL;AAGA,MAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWV,KAHlB;AAIA,MAAA,QAAQ,EAAE,KAAKuB,UAJf;AAKA,MAAA,SAAS,EAAE,UALX;AAKuB,MAAA,WAAW,EAAC,aALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEpC,GAAhB;AAAqB,MAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,YAAY,EAAC,KAApC;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWT,QAHlB;AAIA,MAAA,QAAQ,EAAE,KAAKsB,UAJf;AAKA,MAAA,SAAS,EAAE,UALX;AAKuB,MAAA,WAAW,EAAC,iBALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,CA1CJ,EA8DI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEpC,GAAhB;AAAqB,MAAA,SAAS,EAAC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,YAAY,EAAC,KAApC;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,QAFL;AAGA,MAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWR,MAHlB;AAIA,MAAA,QAAQ,EAAE,KAAKqB,UAJf;AAKA,MAAA,SAAS,EAAE,UALX;AAKuB,MAAA,WAAW,EAAC,uCALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CA9DJ,EAyEI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEpC,GAAhB;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,UAAD;AACC,MAAA,QAAQ,EAAE,KAAKuB,KAAL,CAAWP,SADtB;AAEC,MAAA,QAAQ,EAAE,KAAKwB,qBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAQE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAExC,GAAhB;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,UAAD;AACC,MAAA,QAAQ,EAAE,KAAKuB,KAAL,CAAWL,OADtB;AAEC,MAAA,QAAQ,EAAE,KAAKwB,mBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,CAzEJ,CADA,EA2FA,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAC,qBAAY;AAAb,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAC,SAA1B;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,OACwB,KAAKnB,KAAL,CAAWf,EAAX,GAAgB,QAAhB,GAA2B,MADnD,CADF,EAGY,GAHZ,EAIG,CAAC,KAAKe,KAAL,CAAWf,EAAZ,IACD,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAC,MAA1B;AAAiC,MAAA,IAAI,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,WALF,OAOc,GAPd,EAQE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAC,SAA1B;AAAoC,MAAA,OAAO,EAAE,KAAKqC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,wBARF,CA3FA,CAFJ,CADJ;AA+GD;;AAhOkD","sourcesContent":["import React,{Component} from 'react';\nimport {Card,Form, Button, Col} from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react'\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class AddNewEmployee extends Component{\n  constructor(props){\n     super(props);\n     this.state = this.initialState;\n  }\n\n  initialState = {\n    id:'', lName:'wang', fName:'dehua', sinNum:'', phoneNum:'', email:'', payGrade:'', status:'', startDate:new Date(), endDate: new Date() \n  };\n\n  componentDidMount(){\n      const employeeId = +this.props.match.params.id;\n      if(employeeId){\n        axios.get(\"http://localhost:8082/rest/employee/\"+employeeId)\n        .then(response =>{\n            this.setState({\n                id: response.data.id,\n                lName: response.data.lName,\n                fName: response.data.fName,\n                sinNum: response.data.sinNum,\n                phoneNum: response.data.phoneNum,\n                email: response.data.email,\n                payGrade: response.data.payGrade,\n                status: response.data.status,\n                startDate: response.data.startDate,\n                endDate: response.data.endDate\n            });\n        }).catch((error)=>{\n            console.error(\"Error: \" + error);\n        });\n      }\n  }\n\n  submitEmployee = event =>{\n    event.preventDefault();\n\n    const employeeInfo = {\n        fName: this.state.fName,\n        lName: this.state.lName,\n        sinNum: this.state.sinNum,\n        phoneNum: this.state.phoneNum,\n        email: this.state.email,\n        payGrade: this.state.payGrade,\n        status: this.state.status,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate\n    };\n\n    alert(employeeInfo);\n\n    axios.post(\"http://localhost:8082/rest/employee\",employeeInfo)\n    .then(response=>{\n        if(response.data != null){\n            this.setState(this.initialState);\n            alert(\"Employee Info saved successfully!\");\n        }\n    });\n  }\n\n  updateEmployee = event =>{\n      event.preventDefault();\n      const employeeInfo = {\n        id: this.state.id,\n        lName: this.state.lName,\n        fName: this.state.fName,\n        sinNum: this.state.sinNum,\n        phoneNum: this.state.phoneNum,\n        email: this.state.email,\n        payGrade: this.state.payGrade,\n        status: this.state.status,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate\n    };\n    axios.put(\"http://localhost:8082/rest/employee\",employeeInfo)\n    .then(response=>{\n        if(response.data != null){\n            this.setState(this.initialState);\n            setTimeout(()=> this.employeeList(),1000);\n        }\n    });\n  }\n\n  employeeList = ()=>{\n      return this.props.history.push(\"/viewEmployee\");\n  }\n\n  InfoChange = event =>{\n    this.setState({\n        [event.target.name]:event.target.value\n    });\n  };\n\n  handleStartDateChange = sDate =>{\n      this.setState({\n          startDate:sDate\n      });\n  }\n\n  handleEndDateChange = eDate =>{\n    this.setState({\n        endDate:eDate\n    });\n}\n\n  resetInfo= () => {\n    this.setState(this.initialState);\n  }; \n\n  showState = ()=>{\n      alert(\"the firstname :\" + this.state.fName + this.state.lName)\n  }\n\n  render(){\n    return(\n        <Card className=\"border border-light bg-light\" style={{margin: \"20px\"}}>\n            <Card.Header><Icon name='plus square' /> {this.state.id ? \"Update\" : \"Save\"} A New Employee Into Employee List</Card.Header>\n            <Form onReset={this.resetInfo} onSubmit={this.state.id ? this.updateEmployee : this.submitEmployee} id=\"employeeFormId\">\n            <Card.Body>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridLName\">\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control required autoComplete=\"off\"\n                        type=\"text\" \n                        name=\"lName\" \n                        value={this.state.lName}\n                        onChange={this.InfoChange}\n                        className={\"bg-light\"} \n                        placeholder=\"Enter employee's last name\" />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"formGridFName\">\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control required autoComplete=\"off\" \n                    type=\"text\" \n                    name=\"fName\"\n                    value={this.state.fName}\n                    onChange={this.InfoChange}\n                    className={\"bg-light\"} placeholder=\"Enter employee's first name\" />\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col}  controlId=\"formGridSIN\">\n                    <Form.Label>SIN</Form.Label>\n                    <Form.Control required autoComplete=\"off\"\n                    type=\"text\" \n                    name=\"sinNum\"\n                    value={this.state.sinNum}\n                    onChange={this.InfoChange}\n                    className={\"bg-light\"} placeholder=\"Enter SIN\" />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"formGridPrimePhoneNum\">\n                    <Form.Label>Phone Number</Form.Label>\n                    <Form.Control required autoComplete=\"off\"\n                    type=\"text\" \n                    name=\"phoneNum\"\n                    value={this.state.phoneNum}\n                    onChange={this.InfoChange}\n                    className={\"bg-light\"} placeholder=\"Enter Phone Number\" />\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control autoComplete=\"off\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.InfoChange}\n                    className={\"bg-light\"} placeholder=\"Enter email\" />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"formGridPayGrade\">\n                    <Form.Label>Pay Grade</Form.Label>\n                    <Form.Control required autoComplete=\"off\"\n                    type=\"text\"\n                    name=\"payGrade\"\n                    value={this.state.payGrade}\n                    onChange={this.InfoChange}\n                    className={\"bg-light\"} placeholder=\"Enter pay grade\" />\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridStatus\">\n                    <Form.Label>Status</Form.Label>\n                    <Form.Control required autoComplete=\"off\"\n                    type=\"text\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.InfoChange}\n                    className={\"bg-light\"} placeholder=\"Enter Status: part-time, full-time...\" />\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridSDate\">\n                    <Form.Label>Start Date</Form.Label>\n                    <DatePicker\n                     selected={this.state.startDate}\n                     onChange={this.handleStartDateChange}\n                     />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"formGridEDate\">\n                    <Form.Label>End Date</Form.Label>\n                    <DatePicker\n                     selected={this.state.endDate}\n                     onChange={this.handleEndDateChange}\n                     />\n                  </Form.Group>\n                </Form.Row>\n            </Card.Body>\n            <Card.Footer style={{\"textAlign\":\"right\"}}>\n              <Button size=\"sm\" variant=\"success\" type=\"submit\">\n                <Icon name='save' /> {this.state.id ? \"Update\" : \"Save\"}\n              </Button>{\" \"}\n              {!this.state.id && \n              <Button size=\"sm\" variant=\"info\" type=\"reset\">\n              <Icon name='repeat' /> Reset\n              </Button>} {\" \"}\n              <Button size=\"sm\" variant=\"success\" onClick={this.showState}>\n                <Icon name='save' /> show current state\n              </Button>\n             \n            </Card.Footer>\n            </Form>\n        </Card>\n        \n);\n  }\n}"]},"metadata":{},"sourceType":"module"}