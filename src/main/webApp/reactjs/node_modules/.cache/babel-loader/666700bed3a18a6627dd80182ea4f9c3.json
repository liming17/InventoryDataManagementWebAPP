{"ast":null,"code":"import { FETCH_PRODUCT_REQUEST, FETCH_PRODUCT_SUCCESS, FETCH_PRODUCT_FAILURE } from './OrderType';\nimport axios from 'axios'; //just a func to fetch the product info\n\nexport const fetchProduct = (page, size) => {\n  let urlPage = page - 1;\n  return dispatch => {\n    // dispatch(fetchProductRequest);\n    axios.get(\"http://localhost:8082/rest/products\" + \"?page=\" + urlPage + \"&size=\" + size).then(response => {\n      dispatch(fetchProductSuccess(response.data, page));\n    }).catch(error => {\n      dispatch(fetchProductFailure(error.message));\n    });\n  };\n}; //actions:\n\nconst fetchProductRequest = () => {\n  return {\n    type: FETCH_PRODUCT_REQUEST\n  };\n};\n\nconst fetchProductSuccess = (data, page) => {\n  return {\n    type: FETCH_PRODUCT_SUCCESS,\n    payload: data,\n    page: page\n  };\n};\n\nconst fetchProductFailure = errors => {\n  return {\n    type: FETCH_PRODUCT_FAILURE,\n    payload: errors\n  };\n};","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/services/order/OrderActions.js"],"names":["FETCH_PRODUCT_REQUEST","FETCH_PRODUCT_SUCCESS","FETCH_PRODUCT_FAILURE","axios","fetchProduct","page","size","urlPage","dispatch","get","then","response","fetchProductSuccess","data","catch","error","fetchProductFailure","message","fetchProductRequest","type","payload","errors"],"mappings":"AAAA,SAASA,qBAAT,EAA+BC,qBAA/B,EAAqDC,qBAArD,QAAiF,aAAjF;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAc;AACtC,MAAIC,OAAO,GAAGF,IAAI,GAAC,CAAnB;AACA,SAAOG,QAAQ,IAAI;AACf;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAU,wCAAsC,QAAtC,GAA+CF,OAA/C,GAAuD,QAAvD,GAAgED,IAA1E,EACCI,IADD,CACMC,QAAQ,IAAG;AACbH,MAAAA,QAAQ,CAACI,mBAAmB,CAACD,QAAQ,CAACE,IAAV,EAAeR,IAAf,CAApB,CAAR;AACH,KAHD,EAICS,KAJD,CAIOC,KAAK,IAAG;AACXP,MAAAA,QAAQ,CAACQ,mBAAmB,CAACD,KAAK,CAACE,OAAP,CAApB,CAAR;AACH,KAND;AAOH,GATD;AAUH,CAZM,C,CAcP;;AACA,MAAMC,mBAAmB,GAAG,MAAK;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAEnB;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMY,mBAAmB,GAAG,CAACC,IAAD,EAAMR,IAAN,KAAc;AACtC,SAAO;AACHc,IAAAA,IAAI,EAAElB,qBADH;AAEHmB,IAAAA,OAAO,EAAEP,IAFN;AAGHR,IAAAA,IAAI,EAAEA;AAHH,GAAP;AAKH,CAND;;AAQA,MAAMW,mBAAmB,GAAGK,MAAM,IAAG;AACjC,SAAO;AACHF,IAAAA,IAAI,EAAEjB,qBADH;AAEHkB,IAAAA,OAAO,EAAEC;AAFN,GAAP;AAIH,CALD","sourcesContent":["import  {FETCH_PRODUCT_REQUEST,FETCH_PRODUCT_SUCCESS,FETCH_PRODUCT_FAILURE} from './OrderType';\nimport axios from 'axios';\n\n\n//just a func to fetch the product info\nexport const fetchProduct = (page,size) =>{\n    let urlPage = page-1;\n    return dispatch => {\n        // dispatch(fetchProductRequest);\n        axios.get(\"http://localhost:8082/rest/products\"+\"?page=\"+urlPage+\"&size=\"+size)\n        .then(response =>{\n            dispatch(fetchProductSuccess(response.data,page));\n        })\n        .catch(error =>{\n            dispatch(fetchProductFailure(error.message));\n        });\n    }\n}\n\n//actions:\nconst fetchProductRequest = () =>{\n    return {\n        type: FETCH_PRODUCT_REQUEST\n    };\n};\n\nconst fetchProductSuccess = (data,page) =>{\n    return {\n        type: FETCH_PRODUCT_SUCCESS,\n        payload: data,\n        page: page\n    };\n};\n\nconst fetchProductFailure = errors =>{\n    return {\n        type: FETCH_PRODUCT_FAILURE,\n        payload: errors\n    };\n};"]},"metadata":{},"sourceType":"module"}