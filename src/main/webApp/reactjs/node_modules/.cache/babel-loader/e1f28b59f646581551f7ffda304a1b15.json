{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/ViewOrder.js\";\nimport React, { Component } from 'react';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { CardFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { changeProductAmount, subProductAmount, addProductAmount } from '../services/order/OrderActions';\n\nclass ViewOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postOrder = () => {};\n\n    this.changeProductAmount = (id, event) => {\n      let amount = event.target.value;\n      this.props.changeAmount(id, amount);\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const pageCss = {\n      width: \"45px\",\n      border: \"1px solid #9FC2E8\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return React.createElement(Card, {\n      className: \"border border-light bg-light\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Review Order Info \"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Order Type\"), React.createElement(Form.Control, {\n      plaintext: true,\n      readOnly: true,\n      defaultValue: this.props.order.order_type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridColor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Order Status\"), React.createElement(Form.Control, {\n      plaintext: true,\n      readOnly: true,\n      defaultValue: this.props.order.order_status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Issue Date: \"), React.createElement(DatePicker, {\n      selected: this.props.order.date,\n      onChange: this.handleStartDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Complete Date: \"), React.createElement(DatePicker, {\n      selected: this.props.order.c_date,\n      onChange: this.handleEndDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSalePrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Employee ID\"), React.createElement(Form.Control, {\n      plaintext: true,\n      readOnly: true,\n      defaultValue: this.props.order.empId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })))), React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      striped: true,\n      responsive: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Color\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Barcode\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Purchase Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Sale Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Brand\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Style\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Order Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Select Product\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.addedProducts.length === 0 ? React.createElement(\"tr\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" 0 product added. \")) : this.props.addedProducts.map(product => React.createElement(\"tr\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, product.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, product.color), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, product.barcode), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, product.prime_cost), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, product.sale_price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, product.brand_name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, product.size), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, product.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, product.style), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, product.amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      disabled: this.product.amount === 0 ? true : false,\n      onClick: this.props.substractAmount(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"-\")), React.createElement(FormControl, {\n      style: pageCss,\n      name: \"amount\",\n      value: this.product.amount,\n      onChange: event => this.changeAmount(product.id, event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      onClick: this.props.addAmount(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"+\"))))))))), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        \"float\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      onClick: this.postOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Confirm\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    addedProducts: state.addedProducts,\n    order: state.order\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    //TODO POST ORDER\n    changeAmount: (id, amount) => {\n      dispatch(changeProductAmount(id, amount));\n    },\n    substractAmount: id => {\n      dispatch(subProductAmount(id));\n    },\n    addAmount: id => {\n      dispatch(addProductAmount(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrder);","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/ViewOrder.js"],"names":["React","Component","Card","Table","ButtonGroup","Button","InputGroup","FormControl","CardFooter","connect","changeProductAmount","subProductAmount","addProductAmount","ViewOrder","constructor","props","postOrder","id","event","amount","target","value","changeAmount","componentDidMount","render","pageCss","width","border","textAlign","fontWeight","margin","Col","order","order_type","order_status","date","handleStartDateChange","c_date","handleEndDateChange","empId","addedProducts","length","map","product","name","color","barcode","prime_cost","sale_price","brand_name","size","category","style","substractAmount","addAmount","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Card, Table, ButtonGroup, Button,InputGroup, FormControl} from 'react-bootstrap';\n\nimport { CardFooter } from 'reactstrap';\n\n\nimport {connect} from 'react-redux';\nimport {changeProductAmount,subProductAmount,addProductAmount} from '../services/order/OrderActions';\n\n\nclass ViewOrder extends Component{\n    constructor(props){\n\t\tsuper(props);\n    }\n    \n    componentDidMount(){\n\n    }\n\n    postOrder = ()=>{\n\n    }\n\n    changeProductAmount = (id,event) =>{\n        let amount = event.target.value;\n        this.props.changeAmount(id,amount);\n    }\n\n    render(){\n        const pageCss={\n            width:\"45px\",\n            border:\"1px solid #9FC2E8\",\n            textAlign:\"center\",\n            fontWeight:\"bold\"\n        }\n    return(\n\n        <Card className=\"border border-light bg-light\" style={{margin: \"20px\"}}>\n            <Card.Header>Review Order Info </Card.Header>\n                <Card.Body>\n                <Form>\n                <Form.Row>\n                      <Form.Group as={Col} controlId=\"formGridName\">\n                        <Form.Label>Order Type</Form.Label>\n                            <Form.Control plaintext readOnly defaultValue={this.props.order.order_type}/>        \n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formGridColor\">\n                        <Form.Label>Order Status</Form.Label>\n                          <Form.Control plaintext readOnly defaultValue={this.props.order.order_status}/>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridSDate\">\n                        <Form.Label>Issue Date: </Form.Label>\n                        <DatePicker\n                        selected={this.props.order.date}\n                        onChange={this.handleStartDateChange}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridEDate\">\n                        <Form.Label>Complete Date: </Form.Label>\n                        <DatePicker\n                        selected={this.props.order.c_date}\n                        onChange={this.handleEndDateChange}\n                        />\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group as={Col} controlId=\"formGridSalePrice\">\n                        <Form.Label>Employee ID</Form.Label>\n                        <Form.Control plaintext readOnly defaultValue={this.props.order.empId}/>\n                      </Form.Group>\n                    </Form.Row>\n                </Form>\n\n\n                    <Table bordered hover striped responsive=\"xl\">\n                    <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Color</th>\n                      <th>Barcode</th>\n                      <th>Purchase Price</th>\n                      <th>Sale Price</th>\n                      <th>Brand</th>\n                      <th>Size</th>\n                      <th>Category</th>\n                      <th>Style</th>\n                      <th>Order Amount</th>\n                      <th>Select Product</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                   \n                  {this.props.addedProducts.length === 0 ? \n                          <tr align=\"center\">\n                           <td colSpan=\"11\"> 0 product added. </td>\n                          </tr> :\n                        this.props.addedProducts.map((product) => (\n                                <tr key={product.id}>\n                                  <td>{product.name}</td>\n                                  <td>{product.color}</td>\n                                  <td>{product.barcode}</td>\n                                  <td>{product.prime_cost}</td>\n                                  <td>{product.sale_price}</td>\n                                  <td>{product.brand_name}</td>\n                                  <td>{product.size}</td>\n                                  <td>{product.category}</td>\n                                  <td>{product.style}</td>\n                                  <td>{product.amount}</td>\n                                  <td>\n                                  <InputGroup size=\"sm\">\n                           <InputGroup.Prepend>\n                             <Button type=\"button\" variant=\"outline-info\" disabled={this.product.amount === 0 ? true:false}\n                               onClick={this.props.substractAmount(product.id)}>\n                                 -\n                             </Button>\n                           </InputGroup.Prepend>\n\n                           <FormControl style={pageCss} name=\"amount\" value={this.product.amount}\n                             onChange={(event) => this.changeAmount(product.id,event)}/>\n\n                           <InputGroup.Append>\n                           <Button type=\"button\" variant=\"outline-info\" onClick={this.props.addAmount(product.id)}>\n                                +\n                             </Button>\n                             \n                           </InputGroup.Append>\n                         \n                         </InputGroup>\n                                  \n                                      </td>\n                                  \n                                </tr>\n                                ))\n                  \n                  }\n                  \n                  </tbody>\n                    </Table>\n                \n                </Card.Body>\n                <CardFooter>\n                    <div style={{\"float\":\"right\"}}>\n                         <Button type=\"button\" variant=\"outline-info\" \n                               onClick={this.postOrder}>\n                                 Confirm\n                        </Button>\n                    </div>\n                </CardFooter>\n        </Card>\n\n            \n    );\n} \n}\n\nconst mapStateToProps = state => {\n    return {\n        addedProducts : state.addedProducts,\n        order : state.order\n    }\n }\n\n const mapDispatchToProps = dispatch => {\n    return {\n\n       //TODO POST ORDER\n\n        changeAmount : (id,amount) =>{\n            dispatch(changeProductAmount(id,amount))\n        },\n        substractAmount : (id) =>{\n            dispatch(subProductAmount(id))\n        },\n        addAmount : (id) =>{\n            dispatch(addProductAmount(id))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ViewOrder);"]},"metadata":{},"sourceType":"module"}