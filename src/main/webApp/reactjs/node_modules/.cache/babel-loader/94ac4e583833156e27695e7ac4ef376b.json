{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/ViewOrder.js\";\nimport React, { Component } from 'react';\nimport { Card, Form, Col, Row, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport { CardFooter } from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { changeProductAmount, subProductAmount, addProductAmount } from '../services/order/OrderActions';\n\nclass ViewOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.initialOrderState = {\n      date: new Date(),\n      c_date: new Date(),\n      order_type: 'purchase',\n      order_status: 'pending',\n      empId: ''\n    };\n\n    this.postOrder = () => {\n      // need to post the order info here\n      const orderInfo = {\n        date: this.state.date,\n        c_date: this.state.c_date,\n        order_type: this.state.order_type,\n        order_status: this.state.order_status,\n        empId: this.state.empId\n      }; //post orderInfo and get back the id\n      // then post productId, orderId and amountfor each product\n\n      this.props.productData.addedProducts.map(product => {});\n      axios.post(\"http://localhost:8082/rest/brands\", brand); // first and then in redux post daste to DB then clear the info in the  reducer\n    };\n\n    this.changeProductAmount = (id, event) => {\n      let amount = event.target.value;\n\n      if (amount >= 0) {\n        this.props.changeAmount(id, amount);\n      } else {\n        alert(\"The product amount can't be less than 0\");\n      }\n    };\n\n    this.substractAmount = id => {\n      this.props.substractAmount(id);\n    };\n\n    this.addAmount = id => {\n      this.props.addAmount(id);\n    };\n\n    this.infoChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleStartDateChange = sDate => {\n      this.setState({\n        date: sDate\n      });\n    };\n\n    this.handleEndDateChange = eDate => {\n      this.setState({\n        c_date: eDate\n      });\n    };\n\n    this.state = this.initialOrderState;\n  }\n\n  componentDidMount() {\n    this.setState({\n      date: this.props.productData.order.date,\n      c_date: this.props.productData.order.c_date,\n      order_type: this.props.productData.order.order_type,\n      order_status: this.props.productData.order.order_status,\n      empId: this.props.productData.order.empId\n    });\n  }\n\n  render() {\n    const pageCss = {\n      width: \"45px\",\n      border: \"1px solid #9FC2E8\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return React.createElement(Card, {\n      className: \"border border-light bg-light\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Review Order Info \"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      style: {\n        marginLeft: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Order Type :\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"order_type\",\n      value: this.state.order_type,\n      onChange: this.infoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"purchase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"purchase\"), React.createElement(\"option\", {\n      value: \"sale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"sale\"), React.createElement(\"option\", {\n      value: \"outbound\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"outbound\"))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridColor\",\n      style: {\n        marginLeft: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Order Status :\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"order_status\",\n      value: this.state.order_status,\n      onChange: this.infoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"pending\"), React.createElement(\"option\", {\n      value: \"complete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"complete\")))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        marginRight: \"20px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Issue Date: \"), React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.handleStartDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        marginRight: \"20px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Complete Date: \"), React.createElement(DatePicker, {\n      selected: this.state.c_date,\n      onChange: this.handleEndDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formGridSalePrice\",\n      style: {\n        marginLeft: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Employee ID :\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"empId\",\n      value: this.state.empId,\n      onChange: this.infoChange,\n      className: \"bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))))), React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      striped: true,\n      responsive: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Color\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Barcode\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Purchase Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Sale Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Brand\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Style\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Order Amount\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.props.productData.addedProducts.length === 0 ? React.createElement(\"tr\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \" 0 product added. \")) : this.props.productData.addedProducts.map(product => React.createElement(\"tr\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, product.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, product.color), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, product.barcode), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, product.prime_cost), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, product.sale_price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, product.brand_name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, product.size), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, product.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, product.style), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      disabled: product.amount === 0 ? true : false,\n      onClick: () => {\n        this.substractAmount(product.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"-\")), React.createElement(FormControl, {\n      style: pageCss,\n      name: \"amount\",\n      value: product.amount,\n      onChange: event => {\n        this.changeAmount(product.id, event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      onClick: () => {\n        this.addAmount(product.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"+\"))))))))), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        \"float\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      onClick: this.postOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Confirm\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    productData: state.getProduct\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeAmount: (id, amount) => {\n      dispatch(changeProductAmount(id, amount));\n    },\n    substractAmount: id => {\n      dispatch(subProductAmount(id));\n    },\n    addAmount: id => {\n      dispatch(addProductAmount(id));\n    },\n    resetState: () => {\n      dispatch(resetState());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrder);","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/ViewOrder.js"],"names":["React","Component","Card","Form","Col","Row","Table","Button","InputGroup","FormControl","DatePicker","CardFooter","axios","connect","changeProductAmount","subProductAmount","addProductAmount","ViewOrder","constructor","props","initialOrderState","date","Date","c_date","order_type","order_status","empId","postOrder","orderInfo","state","productData","addedProducts","map","product","post","brand","id","event","amount","target","value","changeAmount","alert","substractAmount","addAmount","infoChange","preventDefault","setState","name","handleStartDateChange","sDate","handleEndDateChange","eDate","componentDidMount","order","render","pageCss","width","border","textAlign","fontWeight","margin","marginLeft","marginRight","length","color","barcode","prime_cost","sale_price","brand_name","size","category","style","mapStateToProps","getProduct","mapDispatchToProps","dispatch","resetState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Card,Form,Col,Row,Table, Button,InputGroup, FormControl} from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\n\nimport { CardFooter } from 'reactstrap';\nimport axios from 'axios';\n\nimport {connect} from 'react-redux';\nimport {changeProductAmount,subProductAmount,addProductAmount} from '../services/order/OrderActions';\n\n\nclass ViewOrder extends Component{\n    constructor(props){\n        super(props);\n        this.state = this.initialOrderState;\n    }\n\n    initialOrderState = {\n       date:new Date(), c_date:new Date(), order_type:'purchase', order_status:'pending', empId:''\n    };\n    \n    componentDidMount(){\n      this.setState({\n        date:this.props.productData.order.date,\n        c_date:this.props.productData.order.c_date,\n        order_type:this.props.productData.order.order_type,\n        order_status:this.props.productData.order.order_status,\n        empId:this.props.productData.order.empId\n      });\n    }\n\n    postOrder = () =>{\n        // need to post the order info here\n        const orderInfo = {\n            date: this.state.date,\n            c_date : this.state.c_date,\n            order_type : this.state.order_type,\n            order_status : this.state.order_status,\n            empId: this.state.empId\n        }\n\n        //post orderInfo and get back the id\n\n        // then post productId, orderId and amountfor each product\n        this.props.productData.addedProducts.map((product)=>{\n\n        });\n\n        axios.post(\"http://localhost:8082/rest/brands\",brand)\n\n        // first and then in redux post daste to DB then clear the info in the  reducer\n    }\n\n    changeProductAmount = (id,event) =>{\n        let amount = event.target.value;\n        if(amount >= 0){\n            this.props.changeAmount(id,amount);\n        }else{\n            alert(\"The product amount can't be less than 0\");\n        }\n    }\n\n    substractAmount = (id)=>{\n        this.props.substractAmount(id);\n    }\n\n    addAmount = (id)=>{\n        this.props.addAmount(id);\n    }\n\n    infoChange = event =>{\n        event.preventDefault();\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    }\n\n    handleStartDateChange = sDate =>{\n        this.setState({\n            date:sDate\n        });\n    }\n  \n    handleEndDateChange = eDate =>{\n      this.setState({\n            c_date:eDate\n      });\n   }\n\n\n\n\n    render(){\n        const pageCss={\n            width:\"45px\",\n            border:\"1px solid #9FC2E8\",\n            textAlign:\"center\",\n            fontWeight:\"bold\"\n        }\n    return(\n\n        <Card className=\"border border-light bg-light\" style={{margin: \"20px\"}}>\n            <Card.Header>Review Order Info </Card.Header>\n                <Card.Body>\n                <Form>\n                <Form.Row>\n                      <Form.Group as={Col} controlId=\"formGridName\" style={{marginLeft: \"5px\",fontWeight:\"bold\"}}>\n                        <Form.Label>Order Type :</Form.Label>\n                        <Form.Control as=\"select\"\n                            name=\"order_type\" \n                            value={this.state.order_type}\n                            onChange={this.infoChange}>\n                                <option value=\"purchase\">purchase</option>\n                                <option value=\"sale\">sale</option>\n                                <option value=\"outbound\">outbound</option>\n                            </Form.Control>      \n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formGridColor\" style={{marginLeft: \"5px\",fontWeight:\"bold\"}}>\n                        <Form.Label>Order Status :</Form.Label>\n                        <Form.Control as=\"select\"\n                            name=\"order_status\" \n                            value={this.state.order_status}\n                            onChange={this.infoChange}>\n                                <option value=\"pending\">pending</option>\n                                <option value=\"complete\">complete</option>\n                            </Form.Control>\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridSDate\">\n                        <Form.Label style={{marginRight: \"20px\",fontWeight:\"bold\"}}>Issue Date: </Form.Label>\n                        <DatePicker\n                        selected={this.state.date}\n                        onChange={this.handleStartDateChange}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridEDate\" >\n                        <Form.Label style={{marginRight: \"20px\",fontWeight:\"bold\"}}>Complete Date: </Form.Label>\n                        <DatePicker\n                        selected={this.state.c_date}\n                        onChange={this.handleEndDateChange}\n                        />\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group as={Row} controlId=\"formGridSalePrice\" style={{marginLeft: \"5px\",fontWeight:\"bold\"}}>\n                        <Form.Label>Employee ID :</Form.Label>\n                            <Col sm={10}>\n                               <Form.Control required autoComplete=\"off\"\n                        type=\"text\"\n                        name=\"empId\"\n                        value={this.state.empId}\n                        onChange={this.infoChange}\n                        className={\"bg-light\"}/> \n                            </Col>\n                      </Form.Group>\n                    </Form.Row>\n                </Form>\n\n\n                    <Table bordered hover striped responsive=\"xl\">\n                    <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Color</th>\n                      <th>Barcode</th>\n                      <th>Purchase Price</th>\n                      <th>Sale Price</th>\n                      <th>Brand</th>\n                      <th>Size</th>\n                      <th>Category</th>\n                      <th>Style</th>\n                      <th>Order Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                   \n                  {this.props.productData.addedProducts.length === 0 ? \n                          <tr align=\"center\">\n                           <td colSpan=\"11\"> 0 product added. </td>\n                          </tr> :\n                        this.props.productData.addedProducts.map((product) => (\n                                <tr key={product.id}>\n                                  <td>{product.name}</td>\n                                  <td>{product.color}</td>\n                                  <td>{product.barcode}</td>\n                                  <td>{product.prime_cost}</td>\n                                  <td>{product.sale_price}</td>\n                                  <td>{product.brand_name}</td>\n                                  <td>{product.size}</td>\n                                  <td>{product.category}</td>\n                                  <td>{product.style}</td>\n                                  <td>\n                                  <InputGroup size=\"sm\">\n                           <InputGroup.Prepend>\n                             <Button type=\"button\" variant=\"outline-info\" disabled={product.amount === 0 ? true:false}\n                               onClick={()=>{this.substractAmount(product.id)}}>\n                                 -\n                             </Button>\n                           </InputGroup.Prepend>\n\n                           <FormControl style={pageCss} name=\"amount\" value={product.amount}\n                             onChange={(event) => {this.changeAmount(product.id,event)}}/>\n\n                           <InputGroup.Append>\n                           <Button type=\"button\" variant=\"outline-info\" onClick={()=>{this.addAmount(product.id)}}>\n                                +\n                             </Button>\n                             \n                           </InputGroup.Append>\n                         \n                         </InputGroup>\n                                  \n                                      </td>\n                                  \n                                </tr>\n                                ))\n                  \n                  }\n                  \n                  </tbody>\n                    </Table>\n                \n                </Card.Body>\n                <CardFooter>\n                    <div style={{\"float\":\"right\"}}>\n                         <Button type=\"button\" variant=\"outline-info\" \n                               onClick={this.postOrder}>\n                                 Confirm\n                        </Button>\n                    </div>\n                </CardFooter>\n        </Card>\n\n            \n    );\n} \n}\n\nconst mapStateToProps = state => {\n    return {\n        productData : state.getProduct\n    }\n }\n\n const mapDispatchToProps = dispatch => {\n    return {\n\n        changeAmount : (id,amount) =>{\n            dispatch(changeProductAmount(id,amount))\n        },\n        substractAmount : (id) =>{\n            dispatch(subProductAmount(id))\n        },\n        addAmount : (id) =>{\n            dispatch(addProductAmount(id))\n        },\n        resetState: () =>{\n            dispatch(resetState());\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ViewOrder);"]},"metadata":{},"sourceType":"module"}