{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/OrderProduct.js\";\nimport React, { Component } from 'react';\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from 'react-redux';\nimport { submitOrder } from '../services/order/OrderActions';\nimport axios from 'axios';\nimport * as moment from 'moment';\n\nclass OrderProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      date: new Date(),\n      c_date: new Date(),\n      order_type: 'purchase',\n      order_status: 'pending',\n      empId: ''\n    };\n\n    this.submitOrder = event => {\n      event.preventDefault();\n      const order = {\n        id: this.state.id,\n        date: moment(this.state.date).format(\"YYYY-MM-DD\"),\n        c_date: moment(this.state.c_date).format(\"YYYY-MM-DD\"),\n        order_type: this.state.order_type,\n        order_status: this.state.order_status,\n        empId: this.state.empId,\n        addedProducts: [{\n          id: 1,\n          amount: 5\n        }, {\n          id: 2,\n          amount: 5\n        }]\n      }; // const order={\n      //     id:this.state.id,\n      //     date:this.state.date,\n      //     c_date:this.state.c_date,\n      //     order_type:this.state.order_type,\n      //     order_status:this.state.order_status,\n      //     empId:this.state.empId\n      // };\n\n      axios.post(\"http://localhost:8082/rest/orderInfo/saveOrderInfo\", order); // this.props.submitOrder(order);\n      // setTimeout(()=> this.goToSelectProduct(),1000);\n    };\n\n    this.goToSelectProduct = () => {\n      return this.props.history.push(\"/createOrder\");\n    };\n\n    this.resetOrder = () => {\n      this.setState(this.initialState);\n    };\n\n    this.infoChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleStartDateChange = sDate => {\n      this.setState({\n        date: sDate\n      });\n    };\n\n    this.handleEndDateChange = eDate => {\n      this.setState({\n        c_date: eDate\n      });\n    };\n\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(Card, {\n      className: \"border border-light bg-light\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \" Create An Order\"), React.createElement(Form, {\n      onReset: this.resetOrder,\n      onSubmit: this.submitOrder,\n      id: \"orderFormId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Order Type\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"order_type\",\n      onChange: this.infoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"purchase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"purchase\"), React.createElement(\"option\", {\n      value: \"sale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"sale\"), React.createElement(\"option\", {\n      value: \"outbound\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"outbound\"))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridColor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Order Status\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"order_status\",\n      onChange: this.infoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"pending\"), React.createElement(\"option\", {\n      value: \"complete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"complete\")))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Issue Date: \"), React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.handleStartDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Complete Date: \"), React.createElement(DatePicker, {\n      selected: this.state.c_date,\n      onChange: this.handleEndDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSalePrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Employee ID\"), React.createElement(Col, {\n      sm: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"empId\",\n      value: this.state.empId,\n      onChange: this.infoChange,\n      className: \"bg-light\",\n      placeholder: \"Enter your employee id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))))), React.createElement(Card.Footer, {\n      style: {\n        \"textAlign\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), \" Save\"), \" \", React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"repeat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), \" Reset\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitOrder: order => {\n      dispatch(submitOrder(order));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderProduct);","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/OrderProduct.js"],"names":["React","Component","Card","Form","Button","Col","Icon","DatePicker","connect","submitOrder","axios","moment","OrderProduct","constructor","props","initialState","id","date","Date","c_date","order_type","order_status","empId","event","preventDefault","order","state","format","addedProducts","amount","post","goToSelectProduct","history","push","resetOrder","setState","infoChange","target","name","value","handleStartDateChange","sDate","handleEndDateChange","eDate","componentDidMount","render","margin","marginRight","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Card,Form, Button, Col} from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport {connect} from 'react-redux';\nimport {submitOrder} from '../services/order/OrderActions';\n\nimport axios from 'axios';\n\nimport * as moment from 'moment';\n\n\nclass OrderProduct extends Component{\n    constructor(props){\n        super(props);\n        this.state = this.initialState;\n    }\n    initialState = {\n        id:'', date:new Date(), c_date:new Date(), order_type:'purchase', order_status:'pending', empId:''\n    };\n\n    componentDidMount(){\n       \n    }\n\n    submitOrder = event =>{\n        event.preventDefault();\n        const order={\n            id:this.state.id,\n            date:moment(this.state.date).format(\"YYYY-MM-DD\"),\n            c_date:moment(this.state.c_date).format(\"YYYY-MM-DD\"),\n            order_type:this.state.order_type,\n            order_status:this.state.order_status,\n            empId:this.state.empId,\n            addedProducts:[\n                {id:1, amount: 5},\n                {id:2, amount: 5}\n            ]\n        };\n        // const order={\n        //     id:this.state.id,\n        //     date:this.state.date,\n        //     c_date:this.state.c_date,\n        //     order_type:this.state.order_type,\n        //     order_status:this.state.order_status,\n        //     empId:this.state.empId\n        // };\n\n\n\n        axios.post(\"http://localhost:8082/rest/orderInfo/saveOrderInfo\",order)\n\n        // this.props.submitOrder(order);\n\n        // setTimeout(()=> this.goToSelectProduct(),1000);\n    }\n\n    goToSelectProduct=()=>{\n\t\treturn this.props.history.push(\"/createOrder\");\n\t};\n\n    resetOrder = () =>{\n        this.setState(this.initialState);\n    }\n    \n    infoChange = event =>{\n        event.preventDefault();\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    }\n\n    handleStartDateChange = sDate =>{\n        this.setState({\n            date:sDate\n        });\n\n    }\n  \n    handleEndDateChange = eDate =>{\n      this.setState({\n            c_date:eDate\n      });\n   }\n\n\n\n\n    render(){\n        return(\n            <Card className=\"border border-light bg-light\" style={{margin: \"20px\"}}>\n                <Card.Header><Icon name='plus square' /> Create An Order</Card.Header>\n                <Form onReset={this.resetOrder} onSubmit={this.submitOrder} id=\"orderFormId\">\n                <Card.Body>\n                    <Form.Row>\n                      <Form.Group as={Col} controlId=\"formGridName\">\n                        <Form.Label>Order Type</Form.Label>\n                            <Form.Control as=\"select\"\n                            name=\"order_type\" \n                            onChange={this.infoChange}>\n                                <option value=\"purchase\">purchase</option>\n                                <option value=\"sale\">sale</option>\n                                <option value=\"outbound\">outbound</option>\n                            </Form.Control>\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formGridColor\">\n                        <Form.Label>Order Status</Form.Label>\n                        <Form.Control as=\"select\"\n                            name=\"order_status\" \n                            onChange={this.infoChange}>\n                                <option value=\"pending\">pending</option>\n                                <option value=\"complete\">complete</option>\n                            </Form.Control>\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridSDate\">\n                        <Form.Label style={{marginRight: \"20px\"}}>Issue Date: </Form.Label>\n                        <DatePicker\n                        selected={this.state.date}\n                        onChange={this.handleStartDateChange}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridEDate\">\n                        <Form.Label style={{marginRight: \"20px\"}}>Complete Date: </Form.Label>\n                        <DatePicker\n                        selected={this.state.c_date}\n                        onChange={this.handleEndDateChange}\n                        />\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group as={Col} controlId=\"formGridSalePrice\">\n                        <Form.Label>Employee ID</Form.Label>\n                        <Col sm=\"5\">\n                        <Form.Control required autoComplete=\"off\"\n                        type=\"text\"\n                        name=\"empId\"\n                        value={this.state.empId}\n                        onChange={this.infoChange}\n                        className={\"bg-light\"} placeholder=\"Enter your employee id\" />\n                        </Col>\n                      </Form.Group>\n                    </Form.Row>\n                </Card.Body>\n                <Card.Footer style={{\"textAlign\":\"right\"}}>\n                  <Button size=\"sm\" variant=\"success\" type=\"submit\">\n                    <Icon name='save' /> Save\n                  </Button>{\" \"}\n                  <Button size=\"sm\" variant=\"info\" type=\"reset\">\n                  <Icon name='repeat' /> Reset\n                  </Button>\n                </Card.Footer>\n                </Form>\n            </Card>\n            \n    );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        \n    }\n }\n\n const mapDispatchToProps = dispatch => {\n    return {\n       submitOrder : (order) =>{\n            dispatch(submitOrder(order))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(OrderProduct);"]},"metadata":{},"sourceType":"module"}