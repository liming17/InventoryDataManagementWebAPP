{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/ViewOrder.js\";\nimport React, { Component } from 'react';\nimport { Card, Form, Col, Row, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport { CardFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { changeProductAmount, subProductAmount, addProductAmount } from '../services/order/OrderActions';\n\nclass ViewOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postOrder = () => {// need to post the info first and then clear the info in the  reducer\n    };\n\n    this.changeProductAmount = (id, event) => {\n      let amount = event.target.value;\n\n      if (amount >= 0) {\n        this.props.changeAmount(id, amount);\n      } else {\n        alert(\"The product amount can't be less than 0\");\n      }\n    };\n\n    this.substractAmount = id => {\n      this.props.substractAmount(id);\n    };\n\n    this.addAmount = id => {\n      this.props.addAmount(id);\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const pageCss = {\n      width: \"45px\",\n      border: \"1px solid #9FC2E8\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return React.createElement(Card, {\n      className: \"border border-light bg-light\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Review Order Info \"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formGridName\",\n      style: {\n        marginLeft: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Order Type :\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      plaintext: true,\n      readOnly: true,\n      defaultValue: this.props.productData.order.order_type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formGridColor\",\n      style: {\n        marginLeft: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Order Status :\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      plaintext: true,\n      readOnly: true,\n      defaultValue: this.props.productData.order.order_status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        marginRight: \"20px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Issue Date: \"), React.createElement(DatePicker, {\n      selected: this.props.productData.order.date,\n      onChange: this.handleStartDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        marginRight: \"20px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Complete Date: \"), React.createElement(DatePicker, {\n      selected: this.props.productData.order.c_date,\n      onChange: this.handleEndDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formGridSalePrice\",\n      style: {\n        marginLeft: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Employee ID :\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      plaintext: true,\n      readOnly: true,\n      defaultValue: this.props.productData.order.empId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))))), React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      striped: true,\n      responsive: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Color\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Barcode\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Purchase Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Sale Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Brand\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Style\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Order Amount\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.props.productData.addedProducts.length === 0 ? React.createElement(\"tr\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" 0 product added. \")) : this.props.productData.addedProducts.map(product => React.createElement(\"tr\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, product.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, product.color), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, product.barcode), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, product.prime_cost), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, product.sale_price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, product.brand_name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, product.size), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, product.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, product.style), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      disabled: product.amount === 0 ? true : false,\n      onClick: () => {\n        this.substractAmount(product.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"-\")), React.createElement(FormControl, {\n      style: pageCss,\n      name: \"amount\",\n      value: product.amount,\n      onChange: event => {\n        this.changeAmount(product.id, event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      onClick: () => {\n        this.addAmount(product.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"+\"))))))))), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        \"float\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-info\",\n      onClick: this.postOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Confirm\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    productData: state.getProduct\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    //TODO POST ORDER\n    changeAmount: (id, amount) => {\n      dispatch(changeProductAmount(id, amount));\n    },\n    substractAmount: id => {\n      dispatch(subProductAmount(id));\n    },\n    addAmount: id => {\n      dispatch(addProductAmount(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrder);","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/ViewOrder.js"],"names":["React","Component","Card","Form","Col","Row","Table","ButtonGroup","Button","InputGroup","FormControl","Icon","DatePicker","CardFooter","connect","changeProductAmount","subProductAmount","addProductAmount","ViewOrder","constructor","props","postOrder","id","event","amount","target","value","changeAmount","alert","substractAmount","addAmount","componentDidMount","render","pageCss","width","border","textAlign","fontWeight","margin","marginLeft","productData","order","order_type","order_status","marginRight","date","handleStartDateChange","c_date","handleEndDateChange","empId","addedProducts","length","map","product","name","color","barcode","prime_cost","sale_price","brand_name","size","category","style","mapStateToProps","state","getProduct","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Card,Form,Col,Row,Table, ButtonGroup, Button,InputGroup, FormControl} from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react'\nimport DatePicker from \"react-datepicker\";\n\nimport { CardFooter } from 'reactstrap';\n\n\nimport {connect} from 'react-redux';\nimport {changeProductAmount,subProductAmount,addProductAmount} from '../services/order/OrderActions';\n\n\nclass ViewOrder extends Component{\n    constructor(props){\n\t\tsuper(props);\n    }\n    \n    componentDidMount(){\n\n    }\n\n    postOrder = ()=>{\n        // need to post the info first and then clear the info in the  reducer\n    }\n\n    changeProductAmount = (id,event) =>{\n        let amount = event.target.value;\n        if(amount >= 0){\n            this.props.changeAmount(id,amount);\n        }else{\n            alert(\"The product amount can't be less than 0\");\n        }\n    }\n\n    substractAmount = (id)=>{\n        this.props.substractAmount(id);\n    }\n\n    addAmount = (id)=>{\n        this.props.addAmount(id);\n    }\n\n\n\n\n    render(){\n        const pageCss={\n            width:\"45px\",\n            border:\"1px solid #9FC2E8\",\n            textAlign:\"center\",\n            fontWeight:\"bold\"\n        }\n    return(\n\n        <Card className=\"border border-light bg-light\" style={{margin: \"20px\"}}>\n            <Card.Header>Review Order Info </Card.Header>\n                <Card.Body>\n                <Form>\n                <Form.Row>\n                      <Form.Group as={Row} controlId=\"formGridName\" style={{marginLeft: \"5px\",fontWeight:\"bold\"}}>\n                        <Form.Label>Order Type :</Form.Label>\n                            <Col sm={10}>\n                               <Form.Control plaintext readOnly defaultValue={this.props.productData.order.order_type}/>   \n                            </Col>       \n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group as={Row} controlId=\"formGridColor\" style={{marginLeft: \"5px\",fontWeight:\"bold\"}}>\n                        <Form.Label>Order Status :</Form.Label>\n                            <Col sm={10}>\n                               <Form.Control plaintext readOnly defaultValue={this.props.productData.order.order_status}/>  \n                            </Col>\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridSDate\">\n                        <Form.Label style={{marginRight: \"20px\",fontWeight:\"bold\"}}>Issue Date: </Form.Label>\n                        <DatePicker\n                        selected={this.props.productData.order.date}\n                        onChange={this.handleStartDateChange}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridEDate\" >\n                        <Form.Label style={{marginRight: \"20px\",fontWeight:\"bold\"}}>Complete Date: </Form.Label>\n                        <DatePicker\n                        selected={this.props.productData.order.c_date}\n                        onChange={this.handleEndDateChange}\n                        />\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group as={Row} controlId=\"formGridSalePrice\" style={{marginLeft: \"5px\",fontWeight:\"bold\"}}>\n                        <Form.Label>Employee ID :</Form.Label>\n                            <Col sm={10}>\n                               <Form.Control plaintext readOnly defaultValue={this.props.productData.order.empId}/> \n                            </Col>\n                      </Form.Group>\n                    </Form.Row>\n                </Form>\n\n\n                    <Table bordered hover striped responsive=\"xl\">\n                    <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Color</th>\n                      <th>Barcode</th>\n                      <th>Purchase Price</th>\n                      <th>Sale Price</th>\n                      <th>Brand</th>\n                      <th>Size</th>\n                      <th>Category</th>\n                      <th>Style</th>\n                      <th>Order Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                   \n                  {this.props.productData.addedProducts.length === 0 ? \n                          <tr align=\"center\">\n                           <td colSpan=\"11\"> 0 product added. </td>\n                          </tr> :\n                        this.props.productData.addedProducts.map((product) => (\n                                <tr key={product.id}>\n                                  <td>{product.name}</td>\n                                  <td>{product.color}</td>\n                                  <td>{product.barcode}</td>\n                                  <td>{product.prime_cost}</td>\n                                  <td>{product.sale_price}</td>\n                                  <td>{product.brand_name}</td>\n                                  <td>{product.size}</td>\n                                  <td>{product.category}</td>\n                                  <td>{product.style}</td>\n                                  <td>\n                                  <InputGroup size=\"sm\">\n                           <InputGroup.Prepend>\n                             <Button type=\"button\" variant=\"outline-info\" disabled={product.amount === 0 ? true:false}\n                               onClick={()=>{this.substractAmount(product.id)}}>\n                                 -\n                             </Button>\n                           </InputGroup.Prepend>\n\n                           <FormControl style={pageCss} name=\"amount\" value={product.amount}\n                             onChange={(event) => {this.changeAmount(product.id,event)}}/>\n\n                           <InputGroup.Append>\n                           <Button type=\"button\" variant=\"outline-info\" onClick={()=>{this.addAmount(product.id)}}>\n                                +\n                             </Button>\n                             \n                           </InputGroup.Append>\n                         \n                         </InputGroup>\n                                  \n                                      </td>\n                                  \n                                </tr>\n                                ))\n                  \n                  }\n                  \n                  </tbody>\n                    </Table>\n                \n                </Card.Body>\n                <CardFooter>\n                    <div style={{\"float\":\"right\"}}>\n                         <Button type=\"button\" variant=\"outline-info\" \n                               onClick={this.postOrder}>\n                                 Confirm\n                        </Button>\n                    </div>\n                </CardFooter>\n        </Card>\n\n            \n    );\n} \n}\n\nconst mapStateToProps = state => {\n    return {\n        productData : state.getProduct\n    }\n }\n\n const mapDispatchToProps = dispatch => {\n    return {\n\n       //TODO POST ORDER\n\n        changeAmount : (id,amount) =>{\n            dispatch(changeProductAmount(id,amount))\n        },\n        substractAmount : (id) =>{\n            dispatch(subProductAmount(id))\n        },\n        addAmount : (id) =>{\n            dispatch(addProductAmount(id))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ViewOrder);"]},"metadata":{},"sourceType":"module"}