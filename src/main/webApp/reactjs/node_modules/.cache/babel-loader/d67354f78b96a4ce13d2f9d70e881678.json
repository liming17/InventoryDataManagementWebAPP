{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/OrderProduct.js\";\nimport React, { Component } from 'react';\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class OrderProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      date: new Date(),\n      c_date: new Date(),\n      order_type: '',\n      order_status: '',\n      empId: ''\n    };\n\n    this.submitOrder = event => {\n      event.preventDefault();\n      const order = {\n        id: this.state.id,\n        date: this.state.date,\n        c_date: this.state.c_date,\n        order_type: this.state.order_type,\n        order_status: this.state.order_status,\n        empId: this.state.empId\n      };\n      alert(order.date);\n\n      if (localStorage.getItem(\"STORED_ORDER\")) {\n        localStorage.removeItem(\"STORED_ORDER\");\n      }\n\n      localStorage.setItem(\"STORED_ORDER\", JSON.stringify(order));\n      localStorage.setItem(\"STORED_ORDER_DATE\", order.date);\n      localStorage.setItem(\"STORED_ORDER_C_DATE\", order.c_date);\n      const stored_order = localStorage.getItem(\"STORED_ORDER_DATE\");\n      alert(stored_order);\n      return this.props.history.push(\"/chooseProduct\");\n    };\n\n    this.resetOrder = () => {\n      this.setState(this.initialState);\n    };\n\n    this.infoChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleStartDateChange = sDate => {\n      this.setState({\n        date: sDate\n      });\n    };\n\n    this.handleEndDateChange = eDate => {\n      this.setState({\n        c_date: eDate\n      });\n    };\n\n    this.typeChange = type => {\n      this.setState({\n        order_type: type\n      });\n    };\n\n    this.statusChange = status => {\n      this.setState({\n        order_status: status\n      });\n    };\n\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    const stored_order = localStorage.getItem(\"STORED_ORDER\");\n\n    if (stored_order) {\n      this.setState({\n        id: stored_order.id,\n        date: stored_order.date,\n        c_date: stored_order.c_date,\n        order_type: stored_order.order_type,\n        order_status: stored_order.order_status,\n        empId: stored_order.empId\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Card, {\n      className: \"border border-light bg-light\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \" Create An Order\"), React.createElement(Form, {\n      onReset: this.resetOrder,\n      onSubmit: this.submitOrder,\n      id: \"orderFormId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Order Type\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"order_type\",\n      onChange: this.infoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"purchase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"purchase\"), React.createElement(\"option\", {\n      value: \"sale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"sale\"), React.createElement(\"option\", {\n      value: \"outbound\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"outbound\"))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridColor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"order_status\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"stored_order\",\n      onChange: this.infoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"pending\"), React.createElement(\"option\", {\n      value: \"complete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"complete\")))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Issue Date: \", \"   \"), React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.handleStartDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Complete Date: \"), React.createElement(DatePicker, {\n      selected: this.state.c_date,\n      onChange: this.handleEndDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSalePrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Employee ID\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"empId\",\n      value: this.state.empId,\n      onChange: this.infoChange,\n      className: \"bg-light\",\n      placeholder: \"Enter your employee id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))), React.createElement(Card.Footer, {\n      style: {\n        \"textAlign\": \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), \" Save\"), \" \", React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"repeat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), \" Reset\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Downloads/Neo/src/main/webApp/reactjs/src/component/OrderProduct.js"],"names":["React","Component","Card","Form","Button","Col","Icon","axios","DatePicker","OrderProduct","constructor","props","initialState","id","date","Date","c_date","order_type","order_status","empId","submitOrder","event","preventDefault","order","state","alert","localStorage","getItem","removeItem","setItem","JSON","stringify","stored_order","history","push","resetOrder","setState","infoChange","target","name","value","handleStartDateChange","sDate","handleEndDateChange","eDate","typeChange","type","statusChange","status","componentDidMount","render","margin"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Card,Form, Button, Col} from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react'\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class OrderProduct extends Component{\n    constructor(props){\n        super(props);\n        this.state = this.initialState;\n    }\n    initialState = {\n        id:'', date:new Date(), c_date:new Date(), order_type:'', order_status:'', empId:''\n    };\n\n    componentDidMount(){\n        const stored_order = localStorage.getItem(\"STORED_ORDER\");\n        if(stored_order){\n            this.setState({\n                id:stored_order.id,\n                date:stored_order.date,\n                c_date:stored_order.c_date,\n                order_type:stored_order.order_type,\n                order_status:stored_order.order_status,\n                empId:stored_order.empId\n            });\n        }\n    }\n\n    submitOrder = event =>{\n        event.preventDefault();\n        const order={\n            id:this.state.id,\n            date:this.state.date,\n            c_date:this.state.c_date,\n            order_type:this.state.order_type,\n            order_status:this.state.order_status,\n            empId:this.state.empId\n        };\n\n        alert(order.date);\n\n        if(localStorage.getItem(\"STORED_ORDER\")){\n            localStorage.removeItem(\"STORED_ORDER\");\n        }\n        localStorage.setItem(\"STORED_ORDER\",JSON.stringify(order));\n        localStorage.setItem(\"STORED_ORDER_DATE\",order.date);\n        localStorage.setItem(\"STORED_ORDER_C_DATE\",order.c_date);\n\n        const stored_order = localStorage.getItem(\"STORED_ORDER_DATE\");\n        alert(stored_order);\n\n        return this.props.history.push(\"/chooseProduct\");\n    }\n\n    resetOrder = () =>{\n        this.setState(this.initialState);\n    }\n    \n    infoChange = event =>{\n        event.preventDefault();\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    }\n\n    handleStartDateChange = sDate =>{\n        this.setState({\n            date:sDate\n        });\n    }\n  \n    handleEndDateChange = eDate =>{\n      this.setState({\n            c_date:eDate\n      });\n   }\n\n   typeChange = type =>{\n       this.setState({\n        order_type:type\n       });\n   }\n\n   statusChange = status=>{\n       this.setState({\n        order_status:status\n       });\n   }\n\n\n\n    render(){\n        return(\n            <Card className=\"border border-light bg-light\" style={{margin: \"20px\"}}>\n                <Card.Header><Icon name='plus square' /> Create An Order</Card.Header>\n                <Form onReset={this.resetOrder} onSubmit={this.submitOrder} id=\"orderFormId\">\n                <Card.Body>\n                    <Form.Row>\n                      <Form.Group as={Col} controlId=\"formGridName\">\n                        <Form.Label>Order Type</Form.Label>\n                            <Form.Control as=\"select\"\n                            name=\"order_type\" \n                            onChange={this.infoChange}>\n                                <option value=\"purchase\">purchase</option>\n                                <option value=\"sale\">sale</option>\n                                <option value=\"outbound\">outbound</option>\n                            </Form.Control>\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formGridColor\">\n                        <Form.Label>order_status</Form.Label>\n                        <Form.Control as=\"select\"\n                            name=\"stored_order\" \n                            onChange={this.infoChange}>\n                                <option value=\"pending\">pending</option>\n                                <option value=\"complete\">complete</option>\n                            </Form.Control>\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridSDate\">\n                        <Form.Label>Issue Date: {\"   \"}</Form.Label>\n                        <DatePicker\n                        selected={this.state.date}\n                        onChange={this.handleStartDateChange}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridEDate\">\n                        <Form.Label>Complete Date: </Form.Label>\n                        <DatePicker\n                        selected={this.state.c_date}\n                        onChange={this.handleEndDateChange}\n                        />\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group as={Col} controlId=\"formGridSalePrice\">\n                        <Form.Label>Employee ID</Form.Label>\n                        <Form.Control required autoComplete=\"off\"\n                        type=\"text\"\n                        name=\"empId\"\n                        value={this.state.empId}\n                        onChange={this.infoChange}\n                        className={\"bg-light\"} placeholder=\"Enter your employee id\" />\n                      </Form.Group>\n                    </Form.Row>\n                </Card.Body>\n                <Card.Footer style={{\"textAlign\":\"right\"}}>\n                  <Button size=\"sm\" variant=\"success\" type=\"submit\">\n                    <Icon name='save' /> Save\n                  </Button>{\" \"}\n                  <Button size=\"sm\" variant=\"info\" type=\"reset\">\n                  <Icon name='repeat' /> Reset\n                  </Button>\n                </Card.Footer>\n                </Form>\n            </Card>\n            \n    );\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}